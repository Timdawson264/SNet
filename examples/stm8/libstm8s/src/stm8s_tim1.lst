                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  3 2018) (Linux)
                                      4 ; This file was generated Fri Sep 20 09:49:51 2019
                                      5 ;--------------------------------------------------------
                                      6 	.module stm8s_tim1
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _TIM1_DeInit
                                     13 	.globl _TIM1_TimeBaseInit
                                     14 	.globl _TIM1_OC1Init
                                     15 	.globl _TIM1_OC2Init
                                     16 	.globl _TIM1_OC3Init
                                     17 	.globl _TIM1_OC4Init
                                     18 	.globl _TIM1_BDTRConfig
                                     19 	.globl _TIM1_ICInit
                                     20 	.globl _TIM1_PWMIConfig
                                     21 	.globl _TIM1_Cmd
                                     22 	.globl _TIM1_CtrlPWMOutputs
                                     23 	.globl _TIM1_ITConfig
                                     24 	.globl _TIM1_InternalClockConfig
                                     25 	.globl _TIM1_ETRClockMode1Config
                                     26 	.globl _TIM1_ETRClockMode2Config
                                     27 	.globl _TIM1_ETRConfig
                                     28 	.globl _TIM1_TIxExternalClockConfig
                                     29 	.globl _TIM1_SelectInputTrigger
                                     30 	.globl _TIM1_UpdateDisableConfig
                                     31 	.globl _TIM1_UpdateRequestConfig
                                     32 	.globl _TIM1_SelectHallSensor
                                     33 	.globl _TIM1_SelectOnePulseMode
                                     34 	.globl _TIM1_SelectOutputTrigger
                                     35 	.globl _TIM1_SelectSlaveMode
                                     36 	.globl _TIM1_SelectMasterSlaveMode
                                     37 	.globl _TIM1_EncoderInterfaceConfig
                                     38 	.globl _TIM1_PrescalerConfig
                                     39 	.globl _TIM1_CounterModeConfig
                                     40 	.globl _TIM1_ForcedOC1Config
                                     41 	.globl _TIM1_ForcedOC2Config
                                     42 	.globl _TIM1_ForcedOC3Config
                                     43 	.globl _TIM1_ForcedOC4Config
                                     44 	.globl _TIM1_ARRPreloadConfig
                                     45 	.globl _TIM1_SelectCOM
                                     46 	.globl _TIM1_CCPreloadControl
                                     47 	.globl _TIM1_OC1PreloadConfig
                                     48 	.globl _TIM1_OC2PreloadConfig
                                     49 	.globl _TIM1_OC3PreloadConfig
                                     50 	.globl _TIM1_OC4PreloadConfig
                                     51 	.globl _TIM1_OC1FastConfig
                                     52 	.globl _TIM1_OC2FastConfig
                                     53 	.globl _TIM1_OC3FastConfig
                                     54 	.globl _TIM1_OC4FastConfig
                                     55 	.globl _TIM1_GenerateEvent
                                     56 	.globl _TIM1_OC1PolarityConfig
                                     57 	.globl _TIM1_OC1NPolarityConfig
                                     58 	.globl _TIM1_OC2PolarityConfig
                                     59 	.globl _TIM1_OC2NPolarityConfig
                                     60 	.globl _TIM1_OC3PolarityConfig
                                     61 	.globl _TIM1_OC3NPolarityConfig
                                     62 	.globl _TIM1_OC4PolarityConfig
                                     63 	.globl _TIM1_CCxCmd
                                     64 	.globl _TIM1_CCxNCmd
                                     65 	.globl _TIM1_SelectOCxM
                                     66 	.globl _TIM1_SetCounter
                                     67 	.globl _TIM1_SetAutoreload
                                     68 	.globl _TIM1_SetCompare1
                                     69 	.globl _TIM1_SetCompare2
                                     70 	.globl _TIM1_SetCompare3
                                     71 	.globl _TIM1_SetCompare4
                                     72 	.globl _TIM1_SetIC1Prescaler
                                     73 	.globl _TIM1_SetIC2Prescaler
                                     74 	.globl _TIM1_SetIC3Prescaler
                                     75 	.globl _TIM1_SetIC4Prescaler
                                     76 	.globl _TIM1_GetCapture1
                                     77 	.globl _TIM1_GetCapture2
                                     78 	.globl _TIM1_GetCapture3
                                     79 	.globl _TIM1_GetCapture4
                                     80 	.globl _TIM1_GetCounter
                                     81 	.globl _TIM1_GetPrescaler
                                     82 	.globl _TIM1_GetFlagStatus
                                     83 	.globl _TIM1_ClearFlag
                                     84 	.globl _TIM1_GetITStatus
                                     85 	.globl _TIM1_ClearITPendingBit
                                     86 ;--------------------------------------------------------
                                     87 ; ram data
                                     88 ;--------------------------------------------------------
                                     89 	.area DATA
                                     90 ;--------------------------------------------------------
                                     91 ; ram data
                                     92 ;--------------------------------------------------------
                                     93 	.area INITIALIZED
                                     94 ;--------------------------------------------------------
                                     95 ; absolute external ram data
                                     96 ;--------------------------------------------------------
                                     97 	.area DABS (ABS)
                                     98 ;--------------------------------------------------------
                                     99 ; global & static initialisations
                                    100 ;--------------------------------------------------------
                                    101 	.area HOME
                                    102 	.area GSINIT
                                    103 	.area GSFINAL
                                    104 	.area GSINIT
                                    105 ;--------------------------------------------------------
                                    106 ; Home
                                    107 ;--------------------------------------------------------
                                    108 	.area HOME
                                    109 	.area HOME
                                    110 ;--------------------------------------------------------
                                    111 ; code
                                    112 ;--------------------------------------------------------
                                    113 	.area CODE
                                    114 ;	libstm8s/src/stm8s_tim1.c: 58: void TIM1_DeInit(void)
                                    115 ;	-----------------------------------------
                                    116 ;	 function TIM1_DeInit
                                    117 ;	-----------------------------------------
      000000                        118 _TIM1_DeInit:
                                    119 ;	libstm8s/src/stm8s_tim1.c: 60: TIM1->CR1  = TIM1_CR1_RESET_VALUE;
      000000 35 00 52 50      [ 1]  120 	mov	0x5250+0, #0x00
                                    121 ;	libstm8s/src/stm8s_tim1.c: 61: TIM1->CR2  = TIM1_CR2_RESET_VALUE;
      000004 35 00 52 51      [ 1]  122 	mov	0x5251+0, #0x00
                                    123 ;	libstm8s/src/stm8s_tim1.c: 62: TIM1->SMCR = TIM1_SMCR_RESET_VALUE;
      000008 35 00 52 52      [ 1]  124 	mov	0x5252+0, #0x00
                                    125 ;	libstm8s/src/stm8s_tim1.c: 63: TIM1->ETR  = TIM1_ETR_RESET_VALUE;
      00000C 35 00 52 53      [ 1]  126 	mov	0x5253+0, #0x00
                                    127 ;	libstm8s/src/stm8s_tim1.c: 64: TIM1->IER  = TIM1_IER_RESET_VALUE;
      000010 35 00 52 54      [ 1]  128 	mov	0x5254+0, #0x00
                                    129 ;	libstm8s/src/stm8s_tim1.c: 65: TIM1->SR2  = TIM1_SR2_RESET_VALUE;
      000014 35 00 52 56      [ 1]  130 	mov	0x5256+0, #0x00
                                    131 ;	libstm8s/src/stm8s_tim1.c: 67: TIM1->CCER1 = TIM1_CCER1_RESET_VALUE;
      000018 35 00 52 5C      [ 1]  132 	mov	0x525c+0, #0x00
                                    133 ;	libstm8s/src/stm8s_tim1.c: 68: TIM1->CCER2 = TIM1_CCER2_RESET_VALUE;
      00001C 35 00 52 5D      [ 1]  134 	mov	0x525d+0, #0x00
                                    135 ;	libstm8s/src/stm8s_tim1.c: 70: TIM1->CCMR1 = 0x01;
      000020 35 01 52 58      [ 1]  136 	mov	0x5258+0, #0x01
                                    137 ;	libstm8s/src/stm8s_tim1.c: 71: TIM1->CCMR2 = 0x01;
      000024 35 01 52 59      [ 1]  138 	mov	0x5259+0, #0x01
                                    139 ;	libstm8s/src/stm8s_tim1.c: 72: TIM1->CCMR3 = 0x01;
      000028 35 01 52 5A      [ 1]  140 	mov	0x525a+0, #0x01
                                    141 ;	libstm8s/src/stm8s_tim1.c: 73: TIM1->CCMR4 = 0x01;
      00002C 35 01 52 5B      [ 1]  142 	mov	0x525b+0, #0x01
                                    143 ;	libstm8s/src/stm8s_tim1.c: 75: TIM1->CCER1 = TIM1_CCER1_RESET_VALUE;
      000030 35 00 52 5C      [ 1]  144 	mov	0x525c+0, #0x00
                                    145 ;	libstm8s/src/stm8s_tim1.c: 76: TIM1->CCER2 = TIM1_CCER2_RESET_VALUE;
      000034 35 00 52 5D      [ 1]  146 	mov	0x525d+0, #0x00
                                    147 ;	libstm8s/src/stm8s_tim1.c: 77: TIM1->CCMR1 = TIM1_CCMR1_RESET_VALUE;
      000038 35 00 52 58      [ 1]  148 	mov	0x5258+0, #0x00
                                    149 ;	libstm8s/src/stm8s_tim1.c: 78: TIM1->CCMR2 = TIM1_CCMR2_RESET_VALUE;
      00003C 35 00 52 59      [ 1]  150 	mov	0x5259+0, #0x00
                                    151 ;	libstm8s/src/stm8s_tim1.c: 79: TIM1->CCMR3 = TIM1_CCMR3_RESET_VALUE;
      000040 35 00 52 5A      [ 1]  152 	mov	0x525a+0, #0x00
                                    153 ;	libstm8s/src/stm8s_tim1.c: 80: TIM1->CCMR4 = TIM1_CCMR4_RESET_VALUE;
      000044 35 00 52 5B      [ 1]  154 	mov	0x525b+0, #0x00
                                    155 ;	libstm8s/src/stm8s_tim1.c: 81: TIM1->CNTRH = TIM1_CNTRH_RESET_VALUE;
      000048 35 00 52 5E      [ 1]  156 	mov	0x525e+0, #0x00
                                    157 ;	libstm8s/src/stm8s_tim1.c: 82: TIM1->CNTRL = TIM1_CNTRL_RESET_VALUE;
      00004C 35 00 52 5F      [ 1]  158 	mov	0x525f+0, #0x00
                                    159 ;	libstm8s/src/stm8s_tim1.c: 83: TIM1->PSCRH = TIM1_PSCRH_RESET_VALUE;
      000050 35 00 52 60      [ 1]  160 	mov	0x5260+0, #0x00
                                    161 ;	libstm8s/src/stm8s_tim1.c: 84: TIM1->PSCRL = TIM1_PSCRL_RESET_VALUE;
      000054 35 00 52 61      [ 1]  162 	mov	0x5261+0, #0x00
                                    163 ;	libstm8s/src/stm8s_tim1.c: 85: TIM1->ARRH  = TIM1_ARRH_RESET_VALUE;
      000058 35 FF 52 62      [ 1]  164 	mov	0x5262+0, #0xff
                                    165 ;	libstm8s/src/stm8s_tim1.c: 86: TIM1->ARRL  = TIM1_ARRL_RESET_VALUE;
      00005C 35 FF 52 63      [ 1]  166 	mov	0x5263+0, #0xff
                                    167 ;	libstm8s/src/stm8s_tim1.c: 87: TIM1->CCR1H = TIM1_CCR1H_RESET_VALUE;
      000060 35 00 52 65      [ 1]  168 	mov	0x5265+0, #0x00
                                    169 ;	libstm8s/src/stm8s_tim1.c: 88: TIM1->CCR1L = TIM1_CCR1L_RESET_VALUE;
      000064 35 00 52 66      [ 1]  170 	mov	0x5266+0, #0x00
                                    171 ;	libstm8s/src/stm8s_tim1.c: 89: TIM1->CCR2H = TIM1_CCR2H_RESET_VALUE;
      000068 35 00 52 67      [ 1]  172 	mov	0x5267+0, #0x00
                                    173 ;	libstm8s/src/stm8s_tim1.c: 90: TIM1->CCR2L = TIM1_CCR2L_RESET_VALUE;
      00006C 35 00 52 68      [ 1]  174 	mov	0x5268+0, #0x00
                                    175 ;	libstm8s/src/stm8s_tim1.c: 91: TIM1->CCR3H = TIM1_CCR3H_RESET_VALUE;
      000070 35 00 52 69      [ 1]  176 	mov	0x5269+0, #0x00
                                    177 ;	libstm8s/src/stm8s_tim1.c: 92: TIM1->CCR3L = TIM1_CCR3L_RESET_VALUE;
      000074 35 00 52 6A      [ 1]  178 	mov	0x526a+0, #0x00
                                    179 ;	libstm8s/src/stm8s_tim1.c: 93: TIM1->CCR4H = TIM1_CCR4H_RESET_VALUE;
      000078 35 00 52 6B      [ 1]  180 	mov	0x526b+0, #0x00
                                    181 ;	libstm8s/src/stm8s_tim1.c: 94: TIM1->CCR4L = TIM1_CCR4L_RESET_VALUE;
      00007C 35 00 52 6C      [ 1]  182 	mov	0x526c+0, #0x00
                                    183 ;	libstm8s/src/stm8s_tim1.c: 95: TIM1->OISR  = TIM1_OISR_RESET_VALUE;
      000080 35 00 52 6F      [ 1]  184 	mov	0x526f+0, #0x00
                                    185 ;	libstm8s/src/stm8s_tim1.c: 96: TIM1->EGR   = 0x01; /* TIM1_EGR_UG */
      000084 35 01 52 57      [ 1]  186 	mov	0x5257+0, #0x01
                                    187 ;	libstm8s/src/stm8s_tim1.c: 97: TIM1->DTR   = TIM1_DTR_RESET_VALUE;
      000088 35 00 52 6E      [ 1]  188 	mov	0x526e+0, #0x00
                                    189 ;	libstm8s/src/stm8s_tim1.c: 98: TIM1->BKR   = TIM1_BKR_RESET_VALUE;
      00008C 35 00 52 6D      [ 1]  190 	mov	0x526d+0, #0x00
                                    191 ;	libstm8s/src/stm8s_tim1.c: 99: TIM1->RCR   = TIM1_RCR_RESET_VALUE;
      000090 35 00 52 64      [ 1]  192 	mov	0x5264+0, #0x00
                                    193 ;	libstm8s/src/stm8s_tim1.c: 100: TIM1->SR1   = TIM1_SR1_RESET_VALUE;
      000094 35 00 52 55      [ 1]  194 	mov	0x5255+0, #0x00
      000098 81               [ 4]  195 	ret
                                    196 ;	libstm8s/src/stm8s_tim1.c: 111: void TIM1_TimeBaseInit(uint16_t TIM1_Prescaler,
                                    197 ;	-----------------------------------------
                                    198 ;	 function TIM1_TimeBaseInit
                                    199 ;	-----------------------------------------
      000099                        200 _TIM1_TimeBaseInit:
      000099 52 04            [ 2]  201 	sub	sp, #4
                                    202 ;	libstm8s/src/stm8s_tim1.c: 120: TIM1->ARRH = (uint8_t)(TIM1_Period >> 8);
      00009B 7B 0A            [ 1]  203 	ld	a, (0x0a, sp)
      00009D 0F 03            [ 1]  204 	clr	(0x03, sp)
      00009F AE 52 62         [ 2]  205 	ldw	x, #0x5262
      0000A2 F7               [ 1]  206 	ld	(x), a
                                    207 ;	libstm8s/src/stm8s_tim1.c: 121: TIM1->ARRL = (uint8_t)(TIM1_Period);
      0000A3 7B 0B            [ 1]  208 	ld	a, (0x0b, sp)
      0000A5 AE 52 63         [ 2]  209 	ldw	x, #0x5263
      0000A8 F7               [ 1]  210 	ld	(x), a
                                    211 ;	libstm8s/src/stm8s_tim1.c: 124: TIM1->PSCRH = (uint8_t)(TIM1_Prescaler >> 8);
      0000A9 7B 07            [ 1]  212 	ld	a, (0x07, sp)
      0000AB 0F 01            [ 1]  213 	clr	(0x01, sp)
      0000AD AE 52 60         [ 2]  214 	ldw	x, #0x5260
      0000B0 F7               [ 1]  215 	ld	(x), a
                                    216 ;	libstm8s/src/stm8s_tim1.c: 125: TIM1->PSCRL = (uint8_t)(TIM1_Prescaler);
      0000B1 7B 08            [ 1]  217 	ld	a, (0x08, sp)
      0000B3 AE 52 61         [ 2]  218 	ldw	x, #0x5261
      0000B6 F7               [ 1]  219 	ld	(x), a
                                    220 ;	libstm8s/src/stm8s_tim1.c: 128: TIM1->CR1 = (uint8_t)((uint8_t)(TIM1->CR1 & (uint8_t)(~(TIM1_CR1_CMS | TIM1_CR1_DIR)))
      0000B7 AE 52 50         [ 2]  221 	ldw	x, #0x5250
      0000BA F6               [ 1]  222 	ld	a, (x)
      0000BB A4 8F            [ 1]  223 	and	a, #0x8f
                                    224 ;	libstm8s/src/stm8s_tim1.c: 129: | (uint8_t)(TIM1_CounterMode));
      0000BD 1A 09            [ 1]  225 	or	a, (0x09, sp)
      0000BF AE 52 50         [ 2]  226 	ldw	x, #0x5250
      0000C2 F7               [ 1]  227 	ld	(x), a
                                    228 ;	libstm8s/src/stm8s_tim1.c: 132: TIM1->RCR = TIM1_RepetitionCounter;
      0000C3 AE 52 64         [ 2]  229 	ldw	x, #0x5264
      0000C6 7B 0C            [ 1]  230 	ld	a, (0x0c, sp)
      0000C8 F7               [ 1]  231 	ld	(x), a
      0000C9 5B 04            [ 2]  232 	addw	sp, #4
      0000CB 81               [ 4]  233 	ret
                                    234 ;	libstm8s/src/stm8s_tim1.c: 154: void TIM1_OC1Init(TIM1_OCMode_TypeDef TIM1_OCMode,
                                    235 ;	-----------------------------------------
                                    236 ;	 function TIM1_OC1Init
                                    237 ;	-----------------------------------------
      0000CC                        238 _TIM1_OC1Init:
      0000CC 52 08            [ 2]  239 	sub	sp, #8
                                    240 ;	libstm8s/src/stm8s_tim1.c: 174: TIM1->CCER1 &= (uint8_t)(~( TIM1_CCER1_CC1E | TIM1_CCER1_CC1NE 
      0000CE AE 52 5C         [ 2]  241 	ldw	x, #0x525c
      0000D1 F6               [ 1]  242 	ld	a, (x)
      0000D2 A4 F0            [ 1]  243 	and	a, #0xf0
      0000D4 F7               [ 1]  244 	ld	(x), a
                                    245 ;	libstm8s/src/stm8s_tim1.c: 178: TIM1->CCER1 |= (uint8_t)((uint8_t)((uint8_t)(TIM1_OutputState & TIM1_CCER1_CC1E)
      0000D5 AE 52 5C         [ 2]  246 	ldw	x, #0x525c
      0000D8 F6               [ 1]  247 	ld	a, (x)
      0000D9 6B 02            [ 1]  248 	ld	(0x02, sp), a
      0000DB 7B 0C            [ 1]  249 	ld	a, (0x0c, sp)
      0000DD A4 01            [ 1]  250 	and	a, #0x01
      0000DF 6B 01            [ 1]  251 	ld	(0x01, sp), a
                                    252 ;	libstm8s/src/stm8s_tim1.c: 179: | (uint8_t)(TIM1_OutputNState & TIM1_CCER1_CC1NE))
      0000E1 7B 0D            [ 1]  253 	ld	a, (0x0d, sp)
      0000E3 A4 04            [ 1]  254 	and	a, #0x04
      0000E5 1A 01            [ 1]  255 	or	a, (0x01, sp)
      0000E7 6B 08            [ 1]  256 	ld	(0x08, sp), a
                                    257 ;	libstm8s/src/stm8s_tim1.c: 180: | (uint8_t)( (uint8_t)(TIM1_OCPolarity  & TIM1_CCER1_CC1P)
      0000E9 7B 10            [ 1]  258 	ld	a, (0x10, sp)
      0000EB A4 02            [ 1]  259 	and	a, #0x02
      0000ED 6B 07            [ 1]  260 	ld	(0x07, sp), a
                                    261 ;	libstm8s/src/stm8s_tim1.c: 181: | (uint8_t)(TIM1_OCNPolarity & TIM1_CCER1_CC1NP)));
      0000EF 7B 11            [ 1]  262 	ld	a, (0x11, sp)
      0000F1 A4 08            [ 1]  263 	and	a, #0x08
      0000F3 1A 07            [ 1]  264 	or	a, (0x07, sp)
      0000F5 1A 08            [ 1]  265 	or	a, (0x08, sp)
      0000F7 1A 02            [ 1]  266 	or	a, (0x02, sp)
      0000F9 AE 52 5C         [ 2]  267 	ldw	x, #0x525c
      0000FC F7               [ 1]  268 	ld	(x), a
                                    269 ;	libstm8s/src/stm8s_tim1.c: 184: TIM1->CCMR1 = (uint8_t)((uint8_t)(TIM1->CCMR1 & (uint8_t)(~TIM1_CCMR_OCM)) | 
      0000FD AE 52 58         [ 2]  270 	ldw	x, #0x5258
      000100 F6               [ 1]  271 	ld	a, (x)
      000101 A4 8F            [ 1]  272 	and	a, #0x8f
                                    273 ;	libstm8s/src/stm8s_tim1.c: 185: (uint8_t)TIM1_OCMode);
      000103 1A 0B            [ 1]  274 	or	a, (0x0b, sp)
      000105 AE 52 58         [ 2]  275 	ldw	x, #0x5258
      000108 F7               [ 1]  276 	ld	(x), a
                                    277 ;	libstm8s/src/stm8s_tim1.c: 188: TIM1->OISR &= (uint8_t)(~(TIM1_OISR_OIS1 | TIM1_OISR_OIS1N));
      000109 AE 52 6F         [ 2]  278 	ldw	x, #0x526f
      00010C F6               [ 1]  279 	ld	a, (x)
      00010D A4 FC            [ 1]  280 	and	a, #0xfc
      00010F F7               [ 1]  281 	ld	(x), a
                                    282 ;	libstm8s/src/stm8s_tim1.c: 190: TIM1->OISR |= (uint8_t)((uint8_t)( TIM1_OCIdleState & TIM1_OISR_OIS1 ) | 
      000110 AE 52 6F         [ 2]  283 	ldw	x, #0x526f
      000113 F6               [ 1]  284 	ld	a, (x)
      000114 6B 06            [ 1]  285 	ld	(0x06, sp), a
      000116 7B 12            [ 1]  286 	ld	a, (0x12, sp)
      000118 A4 01            [ 1]  287 	and	a, #0x01
      00011A 6B 05            [ 1]  288 	ld	(0x05, sp), a
                                    289 ;	libstm8s/src/stm8s_tim1.c: 191: (uint8_t)( TIM1_OCNIdleState & TIM1_OISR_OIS1N ));
      00011C 7B 13            [ 1]  290 	ld	a, (0x13, sp)
      00011E A4 02            [ 1]  291 	and	a, #0x02
      000120 1A 05            [ 1]  292 	or	a, (0x05, sp)
      000122 1A 06            [ 1]  293 	or	a, (0x06, sp)
      000124 AE 52 6F         [ 2]  294 	ldw	x, #0x526f
      000127 F7               [ 1]  295 	ld	(x), a
                                    296 ;	libstm8s/src/stm8s_tim1.c: 194: TIM1->CCR1H = (uint8_t)(TIM1_Pulse >> 8);
      000128 7B 0E            [ 1]  297 	ld	a, (0x0e, sp)
      00012A 0F 03            [ 1]  298 	clr	(0x03, sp)
      00012C AE 52 65         [ 2]  299 	ldw	x, #0x5265
      00012F F7               [ 1]  300 	ld	(x), a
                                    301 ;	libstm8s/src/stm8s_tim1.c: 195: TIM1->CCR1L = (uint8_t)(TIM1_Pulse);
      000130 7B 0F            [ 1]  302 	ld	a, (0x0f, sp)
      000132 AE 52 66         [ 2]  303 	ldw	x, #0x5266
      000135 F7               [ 1]  304 	ld	(x), a
      000136 5B 08            [ 2]  305 	addw	sp, #8
      000138 81               [ 4]  306 	ret
                                    307 ;	libstm8s/src/stm8s_tim1.c: 217: void TIM1_OC2Init(TIM1_OCMode_TypeDef TIM1_OCMode,
                                    308 ;	-----------------------------------------
                                    309 ;	 function TIM1_OC2Init
                                    310 ;	-----------------------------------------
      000139                        311 _TIM1_OC2Init:
      000139 52 08            [ 2]  312 	sub	sp, #8
                                    313 ;	libstm8s/src/stm8s_tim1.c: 237: TIM1->CCER1 &= (uint8_t)(~( TIM1_CCER1_CC2E | TIM1_CCER1_CC2NE | 
      00013B AE 52 5C         [ 2]  314 	ldw	x, #0x525c
      00013E F6               [ 1]  315 	ld	a, (x)
      00013F A4 0F            [ 1]  316 	and	a, #0x0f
      000141 F7               [ 1]  317 	ld	(x), a
                                    318 ;	libstm8s/src/stm8s_tim1.c: 242: TIM1->CCER1 |= (uint8_t)((uint8_t)((uint8_t)(TIM1_OutputState & TIM1_CCER1_CC2E  ) | 
      000142 AE 52 5C         [ 2]  319 	ldw	x, #0x525c
      000145 F6               [ 1]  320 	ld	a, (x)
      000146 6B 08            [ 1]  321 	ld	(0x08, sp), a
      000148 7B 0C            [ 1]  322 	ld	a, (0x0c, sp)
      00014A A4 10            [ 1]  323 	and	a, #0x10
      00014C 6B 01            [ 1]  324 	ld	(0x01, sp), a
                                    325 ;	libstm8s/src/stm8s_tim1.c: 243: (uint8_t)(TIM1_OutputNState & TIM1_CCER1_CC2NE )) | 
      00014E 7B 0D            [ 1]  326 	ld	a, (0x0d, sp)
      000150 A4 40            [ 1]  327 	and	a, #0x40
      000152 1A 01            [ 1]  328 	or	a, (0x01, sp)
      000154 6B 07            [ 1]  329 	ld	(0x07, sp), a
                                    330 ;	libstm8s/src/stm8s_tim1.c: 244: (uint8_t)((uint8_t)(TIM1_OCPolarity  & TIM1_CCER1_CC2P  ) | 
      000156 7B 10            [ 1]  331 	ld	a, (0x10, sp)
      000158 A4 20            [ 1]  332 	and	a, #0x20
      00015A 6B 06            [ 1]  333 	ld	(0x06, sp), a
                                    334 ;	libstm8s/src/stm8s_tim1.c: 245: (uint8_t)(TIM1_OCNPolarity & TIM1_CCER1_CC2NP )));
      00015C 7B 11            [ 1]  335 	ld	a, (0x11, sp)
      00015E A4 80            [ 1]  336 	and	a, #0x80
      000160 1A 06            [ 1]  337 	or	a, (0x06, sp)
      000162 1A 07            [ 1]  338 	or	a, (0x07, sp)
      000164 1A 08            [ 1]  339 	or	a, (0x08, sp)
      000166 AE 52 5C         [ 2]  340 	ldw	x, #0x525c
      000169 F7               [ 1]  341 	ld	(x), a
                                    342 ;	libstm8s/src/stm8s_tim1.c: 248: TIM1->CCMR2 = (uint8_t)((uint8_t)(TIM1->CCMR2 & (uint8_t)(~TIM1_CCMR_OCM)) | 
      00016A AE 52 59         [ 2]  343 	ldw	x, #0x5259
      00016D F6               [ 1]  344 	ld	a, (x)
      00016E A4 8F            [ 1]  345 	and	a, #0x8f
                                    346 ;	libstm8s/src/stm8s_tim1.c: 249: (uint8_t)TIM1_OCMode);
      000170 1A 0B            [ 1]  347 	or	a, (0x0b, sp)
      000172 AE 52 59         [ 2]  348 	ldw	x, #0x5259
      000175 F7               [ 1]  349 	ld	(x), a
                                    350 ;	libstm8s/src/stm8s_tim1.c: 252: TIM1->OISR &= (uint8_t)(~(TIM1_OISR_OIS2 | TIM1_OISR_OIS2N));
      000176 AE 52 6F         [ 2]  351 	ldw	x, #0x526f
      000179 F6               [ 1]  352 	ld	a, (x)
      00017A A4 F3            [ 1]  353 	and	a, #0xf3
      00017C F7               [ 1]  354 	ld	(x), a
                                    355 ;	libstm8s/src/stm8s_tim1.c: 254: TIM1->OISR |= (uint8_t)((uint8_t)(TIM1_OISR_OIS2 & TIM1_OCIdleState) | 
      00017D AE 52 6F         [ 2]  356 	ldw	x, #0x526f
      000180 F6               [ 1]  357 	ld	a, (x)
      000181 6B 05            [ 1]  358 	ld	(0x05, sp), a
      000183 7B 12            [ 1]  359 	ld	a, (0x12, sp)
      000185 A4 04            [ 1]  360 	and	a, #0x04
      000187 6B 04            [ 1]  361 	ld	(0x04, sp), a
                                    362 ;	libstm8s/src/stm8s_tim1.c: 255: (uint8_t)(TIM1_OISR_OIS2N & TIM1_OCNIdleState));
      000189 7B 13            [ 1]  363 	ld	a, (0x13, sp)
      00018B A4 08            [ 1]  364 	and	a, #0x08
      00018D 1A 04            [ 1]  365 	or	a, (0x04, sp)
      00018F 1A 05            [ 1]  366 	or	a, (0x05, sp)
      000191 AE 52 6F         [ 2]  367 	ldw	x, #0x526f
      000194 F7               [ 1]  368 	ld	(x), a
                                    369 ;	libstm8s/src/stm8s_tim1.c: 258: TIM1->CCR2H = (uint8_t)(TIM1_Pulse >> 8);
      000195 7B 0E            [ 1]  370 	ld	a, (0x0e, sp)
      000197 0F 02            [ 1]  371 	clr	(0x02, sp)
      000199 AE 52 67         [ 2]  372 	ldw	x, #0x5267
      00019C F7               [ 1]  373 	ld	(x), a
                                    374 ;	libstm8s/src/stm8s_tim1.c: 259: TIM1->CCR2L = (uint8_t)(TIM1_Pulse);
      00019D 7B 0F            [ 1]  375 	ld	a, (0x0f, sp)
      00019F AE 52 68         [ 2]  376 	ldw	x, #0x5268
      0001A2 F7               [ 1]  377 	ld	(x), a
      0001A3 5B 08            [ 2]  378 	addw	sp, #8
      0001A5 81               [ 4]  379 	ret
                                    380 ;	libstm8s/src/stm8s_tim1.c: 281: void TIM1_OC3Init(TIM1_OCMode_TypeDef TIM1_OCMode,
                                    381 ;	-----------------------------------------
                                    382 ;	 function TIM1_OC3Init
                                    383 ;	-----------------------------------------
      0001A6                        384 _TIM1_OC3Init:
      0001A6 52 08            [ 2]  385 	sub	sp, #8
                                    386 ;	libstm8s/src/stm8s_tim1.c: 301: TIM1->CCER2 &= (uint8_t)(~( TIM1_CCER2_CC3E | TIM1_CCER2_CC3NE | 
      0001A8 AE 52 5D         [ 2]  387 	ldw	x, #0x525d
      0001AB F6               [ 1]  388 	ld	a, (x)
      0001AC A4 F0            [ 1]  389 	and	a, #0xf0
      0001AE F7               [ 1]  390 	ld	(x), a
                                    391 ;	libstm8s/src/stm8s_tim1.c: 305: TIM1->CCER2 |= (uint8_t)((uint8_t)((uint8_t)(TIM1_OutputState  & TIM1_CCER2_CC3E   ) |
      0001AF AE 52 5D         [ 2]  392 	ldw	x, #0x525d
      0001B2 F6               [ 1]  393 	ld	a, (x)
      0001B3 6B 08            [ 1]  394 	ld	(0x08, sp), a
      0001B5 7B 0C            [ 1]  395 	ld	a, (0x0c, sp)
      0001B7 A4 01            [ 1]  396 	and	a, #0x01
      0001B9 6B 07            [ 1]  397 	ld	(0x07, sp), a
                                    398 ;	libstm8s/src/stm8s_tim1.c: 306: (uint8_t)(TIM1_OutputNState & TIM1_CCER2_CC3NE  )) | 
      0001BB 7B 0D            [ 1]  399 	ld	a, (0x0d, sp)
      0001BD A4 04            [ 1]  400 	and	a, #0x04
      0001BF 1A 07            [ 1]  401 	or	a, (0x07, sp)
      0001C1 6B 06            [ 1]  402 	ld	(0x06, sp), a
                                    403 ;	libstm8s/src/stm8s_tim1.c: 307: (uint8_t)((uint8_t)(TIM1_OCPolarity   & TIM1_CCER2_CC3P   ) | 
      0001C3 7B 10            [ 1]  404 	ld	a, (0x10, sp)
      0001C5 A4 02            [ 1]  405 	and	a, #0x02
      0001C7 6B 05            [ 1]  406 	ld	(0x05, sp), a
                                    407 ;	libstm8s/src/stm8s_tim1.c: 308: (uint8_t)(TIM1_OCNPolarity  & TIM1_CCER2_CC3NP  )));
      0001C9 7B 11            [ 1]  408 	ld	a, (0x11, sp)
      0001CB A4 08            [ 1]  409 	and	a, #0x08
      0001CD 1A 05            [ 1]  410 	or	a, (0x05, sp)
      0001CF 1A 06            [ 1]  411 	or	a, (0x06, sp)
      0001D1 1A 08            [ 1]  412 	or	a, (0x08, sp)
      0001D3 AE 52 5D         [ 2]  413 	ldw	x, #0x525d
      0001D6 F7               [ 1]  414 	ld	(x), a
                                    415 ;	libstm8s/src/stm8s_tim1.c: 311: TIM1->CCMR3 = (uint8_t)((uint8_t)(TIM1->CCMR3 & (uint8_t)(~TIM1_CCMR_OCM)) | 
      0001D7 AE 52 5A         [ 2]  416 	ldw	x, #0x525a
      0001DA F6               [ 1]  417 	ld	a, (x)
      0001DB A4 8F            [ 1]  418 	and	a, #0x8f
                                    419 ;	libstm8s/src/stm8s_tim1.c: 312: (uint8_t)TIM1_OCMode);
      0001DD 1A 0B            [ 1]  420 	or	a, (0x0b, sp)
      0001DF AE 52 5A         [ 2]  421 	ldw	x, #0x525a
      0001E2 F7               [ 1]  422 	ld	(x), a
                                    423 ;	libstm8s/src/stm8s_tim1.c: 315: TIM1->OISR &= (uint8_t)(~(TIM1_OISR_OIS3 | TIM1_OISR_OIS3N));
      0001E3 AE 52 6F         [ 2]  424 	ldw	x, #0x526f
      0001E6 F6               [ 1]  425 	ld	a, (x)
      0001E7 A4 CF            [ 1]  426 	and	a, #0xcf
      0001E9 F7               [ 1]  427 	ld	(x), a
                                    428 ;	libstm8s/src/stm8s_tim1.c: 317: TIM1->OISR |= (uint8_t)((uint8_t)(TIM1_OISR_OIS3 & TIM1_OCIdleState) | 
      0001EA AE 52 6F         [ 2]  429 	ldw	x, #0x526f
      0001ED F6               [ 1]  430 	ld	a, (x)
      0001EE 6B 04            [ 1]  431 	ld	(0x04, sp), a
      0001F0 7B 12            [ 1]  432 	ld	a, (0x12, sp)
      0001F2 A4 10            [ 1]  433 	and	a, #0x10
      0001F4 6B 03            [ 1]  434 	ld	(0x03, sp), a
                                    435 ;	libstm8s/src/stm8s_tim1.c: 318: (uint8_t)(TIM1_OISR_OIS3N & TIM1_OCNIdleState));
      0001F6 7B 13            [ 1]  436 	ld	a, (0x13, sp)
      0001F8 A4 20            [ 1]  437 	and	a, #0x20
      0001FA 1A 03            [ 1]  438 	or	a, (0x03, sp)
      0001FC 1A 04            [ 1]  439 	or	a, (0x04, sp)
      0001FE AE 52 6F         [ 2]  440 	ldw	x, #0x526f
      000201 F7               [ 1]  441 	ld	(x), a
                                    442 ;	libstm8s/src/stm8s_tim1.c: 321: TIM1->CCR3H = (uint8_t)(TIM1_Pulse >> 8);
      000202 7B 0E            [ 1]  443 	ld	a, (0x0e, sp)
      000204 0F 01            [ 1]  444 	clr	(0x01, sp)
      000206 AE 52 69         [ 2]  445 	ldw	x, #0x5269
      000209 F7               [ 1]  446 	ld	(x), a
                                    447 ;	libstm8s/src/stm8s_tim1.c: 322: TIM1->CCR3L = (uint8_t)(TIM1_Pulse);
      00020A 7B 0F            [ 1]  448 	ld	a, (0x0f, sp)
      00020C AE 52 6A         [ 2]  449 	ldw	x, #0x526a
      00020F F7               [ 1]  450 	ld	(x), a
      000210 5B 08            [ 2]  451 	addw	sp, #8
      000212 81               [ 4]  452 	ret
                                    453 ;	libstm8s/src/stm8s_tim1.c: 338: void TIM1_OC4Init(TIM1_OCMode_TypeDef TIM1_OCMode,
                                    454 ;	-----------------------------------------
                                    455 ;	 function TIM1_OC4Init
                                    456 ;	-----------------------------------------
      000213                        457 _TIM1_OC4Init:
      000213 52 04            [ 2]  458 	sub	sp, #4
                                    459 ;	libstm8s/src/stm8s_tim1.c: 351: TIM1->CCER2 &= (uint8_t)(~(TIM1_CCER2_CC4E | TIM1_CCER2_CC4P));
      000215 AE 52 5D         [ 2]  460 	ldw	x, #0x525d
      000218 F6               [ 1]  461 	ld	a, (x)
      000219 A4 CF            [ 1]  462 	and	a, #0xcf
      00021B F7               [ 1]  463 	ld	(x), a
                                    464 ;	libstm8s/src/stm8s_tim1.c: 353: TIM1->CCER2 |= (uint8_t)((uint8_t)(TIM1_OutputState & TIM1_CCER2_CC4E ) |  
      00021C AE 52 5D         [ 2]  465 	ldw	x, #0x525d
      00021F F6               [ 1]  466 	ld	a, (x)
      000220 6B 04            [ 1]  467 	ld	(0x04, sp), a
      000222 7B 08            [ 1]  468 	ld	a, (0x08, sp)
      000224 A4 10            [ 1]  469 	and	a, #0x10
      000226 6B 03            [ 1]  470 	ld	(0x03, sp), a
                                    471 ;	libstm8s/src/stm8s_tim1.c: 354: (uint8_t)(TIM1_OCPolarity  & TIM1_CCER2_CC4P ));
      000228 7B 0B            [ 1]  472 	ld	a, (0x0b, sp)
      00022A A4 20            [ 1]  473 	and	a, #0x20
      00022C 1A 03            [ 1]  474 	or	a, (0x03, sp)
      00022E 1A 04            [ 1]  475 	or	a, (0x04, sp)
      000230 AE 52 5D         [ 2]  476 	ldw	x, #0x525d
      000233 F7               [ 1]  477 	ld	(x), a
                                    478 ;	libstm8s/src/stm8s_tim1.c: 357: TIM1->CCMR4 = (uint8_t)((uint8_t)(TIM1->CCMR4 & (uint8_t)(~TIM1_CCMR_OCM)) | 
      000234 AE 52 5B         [ 2]  479 	ldw	x, #0x525b
      000237 F6               [ 1]  480 	ld	a, (x)
      000238 A4 8F            [ 1]  481 	and	a, #0x8f
      00023A 1A 07            [ 1]  482 	or	a, (0x07, sp)
      00023C AE 52 5B         [ 2]  483 	ldw	x, #0x525b
      00023F F7               [ 1]  484 	ld	(x), a
                                    485 ;	libstm8s/src/stm8s_tim1.c: 361: if (TIM1_OCIdleState != TIM1_OCIDLESTATE_RESET)
      000240 0D 0C            [ 1]  486 	tnz	(0x0c, sp)
      000242 27 09            [ 1]  487 	jreq	00102$
                                    488 ;	libstm8s/src/stm8s_tim1.c: 363: TIM1->OISR |= (uint8_t)(~TIM1_CCER2_CC4P);
      000244 AE 52 6F         [ 2]  489 	ldw	x, #0x526f
      000247 F6               [ 1]  490 	ld	a, (x)
      000248 AA DF            [ 1]  491 	or	a, #0xdf
      00024A F7               [ 1]  492 	ld	(x), a
      00024B 20 07            [ 2]  493 	jra	00103$
      00024D                        494 00102$:
                                    495 ;	libstm8s/src/stm8s_tim1.c: 367: TIM1->OISR &= (uint8_t)(~TIM1_OISR_OIS4);
      00024D AE 52 6F         [ 2]  496 	ldw	x, #0x526f
      000250 F6               [ 1]  497 	ld	a, (x)
      000251 A4 BF            [ 1]  498 	and	a, #0xbf
      000253 F7               [ 1]  499 	ld	(x), a
      000254                        500 00103$:
                                    501 ;	libstm8s/src/stm8s_tim1.c: 371: TIM1->CCR4H = (uint8_t)(TIM1_Pulse >> 8);
      000254 7B 09            [ 1]  502 	ld	a, (0x09, sp)
      000256 0F 01            [ 1]  503 	clr	(0x01, sp)
      000258 AE 52 6B         [ 2]  504 	ldw	x, #0x526b
      00025B F7               [ 1]  505 	ld	(x), a
                                    506 ;	libstm8s/src/stm8s_tim1.c: 372: TIM1->CCR4L = (uint8_t)(TIM1_Pulse);
      00025C 7B 0A            [ 1]  507 	ld	a, (0x0a, sp)
      00025E AE 52 6C         [ 2]  508 	ldw	x, #0x526c
      000261 F7               [ 1]  509 	ld	(x), a
      000262 5B 04            [ 2]  510 	addw	sp, #4
      000264 81               [ 4]  511 	ret
                                    512 ;	libstm8s/src/stm8s_tim1.c: 388: void TIM1_BDTRConfig(TIM1_OSSIState_TypeDef TIM1_OSSIState,
                                    513 ;	-----------------------------------------
                                    514 ;	 function TIM1_BDTRConfig
                                    515 ;	-----------------------------------------
      000265                        516 _TIM1_BDTRConfig:
      000265 88               [ 1]  517 	push	a
                                    518 ;	libstm8s/src/stm8s_tim1.c: 402: TIM1->DTR = (uint8_t)(TIM1_DeadTime);
      000266 AE 52 6E         [ 2]  519 	ldw	x, #0x526e
      000269 7B 06            [ 1]  520 	ld	a, (0x06, sp)
      00026B F7               [ 1]  521 	ld	(x), a
                                    522 ;	libstm8s/src/stm8s_tim1.c: 406: TIM1->BKR  =  (uint8_t)((uint8_t)(TIM1_OSSIState | (uint8_t)TIM1_LockLevel)  | 
      00026C 7B 04            [ 1]  523 	ld	a, (0x04, sp)
      00026E 1A 05            [ 1]  524 	or	a, (0x05, sp)
      000270 6B 01            [ 1]  525 	ld	(0x01, sp), a
                                    526 ;	libstm8s/src/stm8s_tim1.c: 407: (uint8_t)((uint8_t)(TIM1_Break | (uint8_t)TIM1_BreakPolarity)  | 
      000272 7B 07            [ 1]  527 	ld	a, (0x07, sp)
      000274 1A 08            [ 1]  528 	or	a, (0x08, sp)
                                    529 ;	libstm8s/src/stm8s_tim1.c: 408: (uint8_t)TIM1_AutomaticOutput));
      000276 1A 09            [ 1]  530 	or	a, (0x09, sp)
      000278 1A 01            [ 1]  531 	or	a, (0x01, sp)
      00027A AE 52 6D         [ 2]  532 	ldw	x, #0x526d
      00027D F7               [ 1]  533 	ld	(x), a
      00027E 84               [ 1]  534 	pop	a
      00027F 81               [ 4]  535 	ret
                                    536 ;	libstm8s/src/stm8s_tim1.c: 423: void TIM1_ICInit(TIM1_Channel_TypeDef TIM1_Channel,
                                    537 ;	-----------------------------------------
                                    538 ;	 function TIM1_ICInit
                                    539 ;	-----------------------------------------
      000280                        540 _TIM1_ICInit:
                                    541 ;	libstm8s/src/stm8s_tim1.c: 436: if (TIM1_Channel == TIM1_CHANNEL_1)
      000280 0D 03            [ 1]  542 	tnz	(0x03, sp)
      000282 26 17            [ 1]  543 	jrne	00108$
                                    544 ;	libstm8s/src/stm8s_tim1.c: 439: TI1_Config((uint8_t)TIM1_ICPolarity,
      000284 7B 07            [ 1]  545 	ld	a, (0x07, sp)
      000286 88               [ 1]  546 	push	a
      000287 7B 06            [ 1]  547 	ld	a, (0x06, sp)
      000289 88               [ 1]  548 	push	a
      00028A 7B 06            [ 1]  549 	ld	a, (0x06, sp)
      00028C 88               [ 1]  550 	push	a
      00028D CDr09r5E         [ 4]  551 	call	_TI1_Config
      000290 5B 03            [ 2]  552 	addw	sp, #3
                                    553 ;	libstm8s/src/stm8s_tim1.c: 443: TIM1_SetIC1Prescaler(TIM1_ICPrescaler);
      000292 7B 06            [ 1]  554 	ld	a, (0x06, sp)
      000294 88               [ 1]  555 	push	a
      000295 CDr08r26         [ 4]  556 	call	_TIM1_SetIC1Prescaler
      000298 84               [ 1]  557 	pop	a
      000299 20 4F            [ 2]  558 	jra	00110$
      00029B                        559 00108$:
                                    560 ;	libstm8s/src/stm8s_tim1.c: 445: else if (TIM1_Channel == TIM1_CHANNEL_2)
      00029B 7B 03            [ 1]  561 	ld	a, (0x03, sp)
      00029D A1 01            [ 1]  562 	cp	a, #0x01
      00029F 26 17            [ 1]  563 	jrne	00105$
                                    564 ;	libstm8s/src/stm8s_tim1.c: 448: TI2_Config((uint8_t)TIM1_ICPolarity,
      0002A1 7B 07            [ 1]  565 	ld	a, (0x07, sp)
      0002A3 88               [ 1]  566 	push	a
      0002A4 7B 06            [ 1]  567 	ld	a, (0x06, sp)
      0002A6 88               [ 1]  568 	push	a
      0002A7 7B 06            [ 1]  569 	ld	a, (0x06, sp)
      0002A9 88               [ 1]  570 	push	a
      0002AA CDr09r92         [ 4]  571 	call	_TI2_Config
      0002AD 5B 03            [ 2]  572 	addw	sp, #3
                                    573 ;	libstm8s/src/stm8s_tim1.c: 452: TIM1_SetIC2Prescaler(TIM1_ICPrescaler);
      0002AF 7B 06            [ 1]  574 	ld	a, (0x06, sp)
      0002B1 88               [ 1]  575 	push	a
      0002B2 CDr08r33         [ 4]  576 	call	_TIM1_SetIC2Prescaler
      0002B5 84               [ 1]  577 	pop	a
      0002B6 20 32            [ 2]  578 	jra	00110$
      0002B8                        579 00105$:
                                    580 ;	libstm8s/src/stm8s_tim1.c: 454: else if (TIM1_Channel == TIM1_CHANNEL_3)
      0002B8 7B 03            [ 1]  581 	ld	a, (0x03, sp)
      0002BA A1 02            [ 1]  582 	cp	a, #0x02
      0002BC 26 17            [ 1]  583 	jrne	00102$
                                    584 ;	libstm8s/src/stm8s_tim1.c: 457: TI3_Config((uint8_t)TIM1_ICPolarity,
      0002BE 7B 07            [ 1]  585 	ld	a, (0x07, sp)
      0002C0 88               [ 1]  586 	push	a
      0002C1 7B 06            [ 1]  587 	ld	a, (0x06, sp)
      0002C3 88               [ 1]  588 	push	a
      0002C4 7B 06            [ 1]  589 	ld	a, (0x06, sp)
      0002C6 88               [ 1]  590 	push	a
      0002C7 CDr09rCC         [ 4]  591 	call	_TI3_Config
      0002CA 5B 03            [ 2]  592 	addw	sp, #3
                                    593 ;	libstm8s/src/stm8s_tim1.c: 461: TIM1_SetIC3Prescaler(TIM1_ICPrescaler);
      0002CC 7B 06            [ 1]  594 	ld	a, (0x06, sp)
      0002CE 88               [ 1]  595 	push	a
      0002CF CDr08r40         [ 4]  596 	call	_TIM1_SetIC3Prescaler
      0002D2 84               [ 1]  597 	pop	a
      0002D3 20 15            [ 2]  598 	jra	00110$
      0002D5                        599 00102$:
                                    600 ;	libstm8s/src/stm8s_tim1.c: 466: TI4_Config((uint8_t)TIM1_ICPolarity,
      0002D5 7B 07            [ 1]  601 	ld	a, (0x07, sp)
      0002D7 88               [ 1]  602 	push	a
      0002D8 7B 06            [ 1]  603 	ld	a, (0x06, sp)
      0002DA 88               [ 1]  604 	push	a
      0002DB 7B 06            [ 1]  605 	ld	a, (0x06, sp)
      0002DD 88               [ 1]  606 	push	a
      0002DE CDr0Ar00         [ 4]  607 	call	_TI4_Config
      0002E1 5B 03            [ 2]  608 	addw	sp, #3
                                    609 ;	libstm8s/src/stm8s_tim1.c: 470: TIM1_SetIC4Prescaler(TIM1_ICPrescaler);
      0002E3 7B 06            [ 1]  610 	ld	a, (0x06, sp)
      0002E5 88               [ 1]  611 	push	a
      0002E6 CDr08r4D         [ 4]  612 	call	_TIM1_SetIC4Prescaler
      0002E9 84               [ 1]  613 	pop	a
      0002EA                        614 00110$:
      0002EA 81               [ 4]  615 	ret
                                    616 ;	libstm8s/src/stm8s_tim1.c: 488: void TIM1_PWMIConfig(TIM1_Channel_TypeDef TIM1_Channel,
                                    617 ;	-----------------------------------------
                                    618 ;	 function TIM1_PWMIConfig
                                    619 ;	-----------------------------------------
      0002EB                        620 _TIM1_PWMIConfig:
      0002EB 89               [ 2]  621 	pushw	x
                                    622 ;	libstm8s/src/stm8s_tim1.c: 504: if (TIM1_ICPolarity != TIM1_ICPOLARITY_FALLING)
      0002EC 7B 06            [ 1]  623 	ld	a, (0x06, sp)
      0002EE A1 01            [ 1]  624 	cp	a, #0x01
      0002F0 27 06            [ 1]  625 	jreq	00102$
                                    626 ;	libstm8s/src/stm8s_tim1.c: 506: icpolarity = TIM1_ICPOLARITY_FALLING;
      0002F2 A6 01            [ 1]  627 	ld	a, #0x01
      0002F4 6B 02            [ 1]  628 	ld	(0x02, sp), a
      0002F6 20 02            [ 2]  629 	jra	00103$
      0002F8                        630 00102$:
                                    631 ;	libstm8s/src/stm8s_tim1.c: 510: icpolarity = TIM1_ICPOLARITY_RISING;
      0002F8 0F 02            [ 1]  632 	clr	(0x02, sp)
      0002FA                        633 00103$:
                                    634 ;	libstm8s/src/stm8s_tim1.c: 514: if (TIM1_ICSelection == TIM1_ICSELECTION_DIRECTTI)
      0002FA 7B 07            [ 1]  635 	ld	a, (0x07, sp)
      0002FC A1 01            [ 1]  636 	cp	a, #0x01
      0002FE 26 06            [ 1]  637 	jrne	00105$
                                    638 ;	libstm8s/src/stm8s_tim1.c: 516: icselection = TIM1_ICSELECTION_INDIRECTTI;
      000300 A6 02            [ 1]  639 	ld	a, #0x02
      000302 6B 01            [ 1]  640 	ld	(0x01, sp), a
      000304 20 04            [ 2]  641 	jra	00106$
      000306                        642 00105$:
                                    643 ;	libstm8s/src/stm8s_tim1.c: 520: icselection = TIM1_ICSELECTION_DIRECTTI;
      000306 A6 01            [ 1]  644 	ld	a, #0x01
      000308 6B 01            [ 1]  645 	ld	(0x01, sp), a
      00030A                        646 00106$:
                                    647 ;	libstm8s/src/stm8s_tim1.c: 523: if (TIM1_Channel == TIM1_CHANNEL_1)
      00030A 0D 05            [ 1]  648 	tnz	(0x05, sp)
      00030C 26 2C            [ 1]  649 	jrne	00108$
                                    650 ;	libstm8s/src/stm8s_tim1.c: 526: TI1_Config((uint8_t)TIM1_ICPolarity, (uint8_t)TIM1_ICSelection,
      00030E 7B 09            [ 1]  651 	ld	a, (0x09, sp)
      000310 88               [ 1]  652 	push	a
      000311 7B 08            [ 1]  653 	ld	a, (0x08, sp)
      000313 88               [ 1]  654 	push	a
      000314 7B 08            [ 1]  655 	ld	a, (0x08, sp)
      000316 88               [ 1]  656 	push	a
      000317 CDr09r5E         [ 4]  657 	call	_TI1_Config
      00031A 5B 03            [ 2]  658 	addw	sp, #3
                                    659 ;	libstm8s/src/stm8s_tim1.c: 530: TIM1_SetIC1Prescaler(TIM1_ICPrescaler);
      00031C 7B 08            [ 1]  660 	ld	a, (0x08, sp)
      00031E 88               [ 1]  661 	push	a
      00031F CDr08r26         [ 4]  662 	call	_TIM1_SetIC1Prescaler
      000322 84               [ 1]  663 	pop	a
                                    664 ;	libstm8s/src/stm8s_tim1.c: 533: TI2_Config(icpolarity, icselection, TIM1_ICFilter);
      000323 7B 09            [ 1]  665 	ld	a, (0x09, sp)
      000325 88               [ 1]  666 	push	a
      000326 7B 02            [ 1]  667 	ld	a, (0x02, sp)
      000328 88               [ 1]  668 	push	a
      000329 7B 04            [ 1]  669 	ld	a, (0x04, sp)
      00032B 88               [ 1]  670 	push	a
      00032C CDr09r92         [ 4]  671 	call	_TI2_Config
      00032F 5B 03            [ 2]  672 	addw	sp, #3
                                    673 ;	libstm8s/src/stm8s_tim1.c: 536: TIM1_SetIC2Prescaler(TIM1_ICPrescaler);
      000331 7B 08            [ 1]  674 	ld	a, (0x08, sp)
      000333 88               [ 1]  675 	push	a
      000334 CDr08r33         [ 4]  676 	call	_TIM1_SetIC2Prescaler
      000337 84               [ 1]  677 	pop	a
      000338 20 2A            [ 2]  678 	jra	00110$
      00033A                        679 00108$:
                                    680 ;	libstm8s/src/stm8s_tim1.c: 541: TI2_Config((uint8_t)TIM1_ICPolarity, (uint8_t)TIM1_ICSelection,
      00033A 7B 09            [ 1]  681 	ld	a, (0x09, sp)
      00033C 88               [ 1]  682 	push	a
      00033D 7B 08            [ 1]  683 	ld	a, (0x08, sp)
      00033F 88               [ 1]  684 	push	a
      000340 7B 08            [ 1]  685 	ld	a, (0x08, sp)
      000342 88               [ 1]  686 	push	a
      000343 CDr09r92         [ 4]  687 	call	_TI2_Config
      000346 5B 03            [ 2]  688 	addw	sp, #3
                                    689 ;	libstm8s/src/stm8s_tim1.c: 545: TIM1_SetIC2Prescaler(TIM1_ICPrescaler);
      000348 7B 08            [ 1]  690 	ld	a, (0x08, sp)
      00034A 88               [ 1]  691 	push	a
      00034B CDr08r33         [ 4]  692 	call	_TIM1_SetIC2Prescaler
      00034E 84               [ 1]  693 	pop	a
                                    694 ;	libstm8s/src/stm8s_tim1.c: 548: TI1_Config(icpolarity, icselection, TIM1_ICFilter);
      00034F 7B 09            [ 1]  695 	ld	a, (0x09, sp)
      000351 88               [ 1]  696 	push	a
      000352 7B 02            [ 1]  697 	ld	a, (0x02, sp)
      000354 88               [ 1]  698 	push	a
      000355 7B 04            [ 1]  699 	ld	a, (0x04, sp)
      000357 88               [ 1]  700 	push	a
      000358 CDr09r5E         [ 4]  701 	call	_TI1_Config
      00035B 5B 03            [ 2]  702 	addw	sp, #3
                                    703 ;	libstm8s/src/stm8s_tim1.c: 551: TIM1_SetIC1Prescaler(TIM1_ICPrescaler);
      00035D 7B 08            [ 1]  704 	ld	a, (0x08, sp)
      00035F 88               [ 1]  705 	push	a
      000360 CDr08r26         [ 4]  706 	call	_TIM1_SetIC1Prescaler
      000363 84               [ 1]  707 	pop	a
      000364                        708 00110$:
      000364 85               [ 2]  709 	popw	x
      000365 81               [ 4]  710 	ret
                                    711 ;	libstm8s/src/stm8s_tim1.c: 561: void TIM1_Cmd(FunctionalState NewState)
                                    712 ;	-----------------------------------------
                                    713 ;	 function TIM1_Cmd
                                    714 ;	-----------------------------------------
      000366                        715 _TIM1_Cmd:
                                    716 ;	libstm8s/src/stm8s_tim1.c: 567: if (NewState != DISABLE)
      000366 0D 03            [ 1]  717 	tnz	(0x03, sp)
      000368 27 06            [ 1]  718 	jreq	00102$
                                    719 ;	libstm8s/src/stm8s_tim1.c: 569: TIM1->CR1 |= TIM1_CR1_CEN;
      00036A 72 10 52 50      [ 1]  720 	bset	0x5250, #0
      00036E 20 04            [ 2]  721 	jra	00104$
      000370                        722 00102$:
                                    723 ;	libstm8s/src/stm8s_tim1.c: 573: TIM1->CR1 &= (uint8_t)(~TIM1_CR1_CEN);
      000370 72 11 52 50      [ 1]  724 	bres	0x5250, #0
      000374                        725 00104$:
      000374 81               [ 4]  726 	ret
                                    727 ;	libstm8s/src/stm8s_tim1.c: 583: void TIM1_CtrlPWMOutputs(FunctionalState NewState)
                                    728 ;	-----------------------------------------
                                    729 ;	 function TIM1_CtrlPWMOutputs
                                    730 ;	-----------------------------------------
      000375                        731 _TIM1_CtrlPWMOutputs:
                                    732 ;	libstm8s/src/stm8s_tim1.c: 590: if (NewState != DISABLE)
      000375 0D 03            [ 1]  733 	tnz	(0x03, sp)
      000377 27 06            [ 1]  734 	jreq	00102$
                                    735 ;	libstm8s/src/stm8s_tim1.c: 592: TIM1->BKR |= TIM1_BKR_MOE;
      000379 72 1E 52 6D      [ 1]  736 	bset	0x526d, #7
      00037D 20 04            [ 2]  737 	jra	00104$
      00037F                        738 00102$:
                                    739 ;	libstm8s/src/stm8s_tim1.c: 596: TIM1->BKR &= (uint8_t)(~TIM1_BKR_MOE);
      00037F 72 1F 52 6D      [ 1]  740 	bres	0x526d, #7
      000383                        741 00104$:
      000383 81               [ 4]  742 	ret
                                    743 ;	libstm8s/src/stm8s_tim1.c: 617: void TIM1_ITConfig(TIM1_IT_TypeDef  TIM1_IT, FunctionalState NewState)
                                    744 ;	-----------------------------------------
                                    745 ;	 function TIM1_ITConfig
                                    746 ;	-----------------------------------------
      000384                        747 _TIM1_ITConfig:
      000384 88               [ 1]  748 	push	a
                                    749 ;	libstm8s/src/stm8s_tim1.c: 623: if (NewState != DISABLE)
      000385 0D 05            [ 1]  750 	tnz	(0x05, sp)
      000387 27 0C            [ 1]  751 	jreq	00102$
                                    752 ;	libstm8s/src/stm8s_tim1.c: 626: TIM1->IER |= (uint8_t)TIM1_IT;
      000389 AE 52 54         [ 2]  753 	ldw	x, #0x5254
      00038C F6               [ 1]  754 	ld	a, (x)
      00038D 1A 04            [ 1]  755 	or	a, (0x04, sp)
      00038F AE 52 54         [ 2]  756 	ldw	x, #0x5254
      000392 F7               [ 1]  757 	ld	(x), a
      000393 20 0F            [ 2]  758 	jra	00104$
      000395                        759 00102$:
                                    760 ;	libstm8s/src/stm8s_tim1.c: 631: TIM1->IER &= (uint8_t)(~(uint8_t)TIM1_IT);
      000395 AE 52 54         [ 2]  761 	ldw	x, #0x5254
      000398 F6               [ 1]  762 	ld	a, (x)
      000399 6B 01            [ 1]  763 	ld	(0x01, sp), a
      00039B 7B 04            [ 1]  764 	ld	a, (0x04, sp)
      00039D 43               [ 1]  765 	cpl	a
      00039E 14 01            [ 1]  766 	and	a, (0x01, sp)
      0003A0 AE 52 54         [ 2]  767 	ldw	x, #0x5254
      0003A3 F7               [ 1]  768 	ld	(x), a
      0003A4                        769 00104$:
      0003A4 84               [ 1]  770 	pop	a
      0003A5 81               [ 4]  771 	ret
                                    772 ;	libstm8s/src/stm8s_tim1.c: 640: void TIM1_InternalClockConfig(void)
                                    773 ;	-----------------------------------------
                                    774 ;	 function TIM1_InternalClockConfig
                                    775 ;	-----------------------------------------
      0003A6                        776 _TIM1_InternalClockConfig:
                                    777 ;	libstm8s/src/stm8s_tim1.c: 643: TIM1->SMCR &= (uint8_t)(~TIM1_SMCR_SMS);
      0003A6 AE 52 52         [ 2]  778 	ldw	x, #0x5252
      0003A9 F6               [ 1]  779 	ld	a, (x)
      0003AA A4 F8            [ 1]  780 	and	a, #0xf8
      0003AC F7               [ 1]  781 	ld	(x), a
      0003AD 81               [ 4]  782 	ret
                                    783 ;	libstm8s/src/stm8s_tim1.c: 662: void TIM1_ETRClockMode1Config(TIM1_ExtTRGPSC_TypeDef TIM1_ExtTRGPrescaler,
                                    784 ;	-----------------------------------------
                                    785 ;	 function TIM1_ETRClockMode1Config
                                    786 ;	-----------------------------------------
      0003AE                        787 _TIM1_ETRClockMode1Config:
                                    788 ;	libstm8s/src/stm8s_tim1.c: 671: TIM1_ETRConfig(TIM1_ExtTRGPrescaler, TIM1_ExtTRGPolarity, ExtTRGFilter);
      0003AE 7B 05            [ 1]  789 	ld	a, (0x05, sp)
      0003B0 88               [ 1]  790 	push	a
      0003B1 7B 05            [ 1]  791 	ld	a, (0x05, sp)
      0003B3 88               [ 1]  792 	push	a
      0003B4 7B 05            [ 1]  793 	ld	a, (0x05, sp)
      0003B6 88               [ 1]  794 	push	a
      0003B7 CDr03rDF         [ 4]  795 	call	_TIM1_ETRConfig
      0003BA 5B 03            [ 2]  796 	addw	sp, #3
                                    797 ;	libstm8s/src/stm8s_tim1.c: 674: TIM1->SMCR = (uint8_t)((uint8_t)(TIM1->SMCR & (uint8_t)(~(uint8_t)(TIM1_SMCR_SMS | TIM1_SMCR_TS )))
      0003BC AE 52 52         [ 2]  798 	ldw	x, #0x5252
      0003BF F6               [ 1]  799 	ld	a, (x)
      0003C0 A4 88            [ 1]  800 	and	a, #0x88
      0003C2 AA 77            [ 1]  801 	or	a, #0x77
      0003C4 AE 52 52         [ 2]  802 	ldw	x, #0x5252
      0003C7 F7               [ 1]  803 	ld	(x), a
      0003C8 81               [ 4]  804 	ret
                                    805 ;	libstm8s/src/stm8s_tim1.c: 694: void TIM1_ETRClockMode2Config(TIM1_ExtTRGPSC_TypeDef TIM1_ExtTRGPrescaler,
                                    806 ;	-----------------------------------------
                                    807 ;	 function TIM1_ETRClockMode2Config
                                    808 ;	-----------------------------------------
      0003C9                        809 _TIM1_ETRClockMode2Config:
                                    810 ;	libstm8s/src/stm8s_tim1.c: 703: TIM1_ETRConfig(TIM1_ExtTRGPrescaler, TIM1_ExtTRGPolarity, ExtTRGFilter);
      0003C9 7B 05            [ 1]  811 	ld	a, (0x05, sp)
      0003CB 88               [ 1]  812 	push	a
      0003CC 7B 05            [ 1]  813 	ld	a, (0x05, sp)
      0003CE 88               [ 1]  814 	push	a
      0003CF 7B 05            [ 1]  815 	ld	a, (0x05, sp)
      0003D1 88               [ 1]  816 	push	a
      0003D2 CDr03rDF         [ 4]  817 	call	_TIM1_ETRConfig
      0003D5 5B 03            [ 2]  818 	addw	sp, #3
                                    819 ;	libstm8s/src/stm8s_tim1.c: 706: TIM1->ETR |= TIM1_ETR_ECE;
      0003D7 AE 52 53         [ 2]  820 	ldw	x, #0x5253
      0003DA F6               [ 1]  821 	ld	a, (x)
      0003DB AA 40            [ 1]  822 	or	a, #0x40
      0003DD F7               [ 1]  823 	ld	(x), a
      0003DE 81               [ 4]  824 	ret
                                    825 ;	libstm8s/src/stm8s_tim1.c: 725: void TIM1_ETRConfig(TIM1_ExtTRGPSC_TypeDef TIM1_ExtTRGPrescaler,
                                    826 ;	-----------------------------------------
                                    827 ;	 function TIM1_ETRConfig
                                    828 ;	-----------------------------------------
      0003DF                        829 _TIM1_ETRConfig:
      0003DF 88               [ 1]  830 	push	a
                                    831 ;	libstm8s/src/stm8s_tim1.c: 732: TIM1->ETR |= (uint8_t)((uint8_t)(TIM1_ExtTRGPrescaler | (uint8_t)TIM1_ExtTRGPolarity )|
      0003E0 AE 52 53         [ 2]  832 	ldw	x, #0x5253
      0003E3 F6               [ 1]  833 	ld	a, (x)
      0003E4 6B 01            [ 1]  834 	ld	(0x01, sp), a
      0003E6 7B 04            [ 1]  835 	ld	a, (0x04, sp)
      0003E8 1A 05            [ 1]  836 	or	a, (0x05, sp)
                                    837 ;	libstm8s/src/stm8s_tim1.c: 733: (uint8_t)ExtTRGFilter );
      0003EA 1A 06            [ 1]  838 	or	a, (0x06, sp)
      0003EC 1A 01            [ 1]  839 	or	a, (0x01, sp)
      0003EE AE 52 53         [ 2]  840 	ldw	x, #0x5253
      0003F1 F7               [ 1]  841 	ld	(x), a
      0003F2 84               [ 1]  842 	pop	a
      0003F3 81               [ 4]  843 	ret
                                    844 ;	libstm8s/src/stm8s_tim1.c: 751: void TIM1_TIxExternalClockConfig(TIM1_TIxExternalCLK1Source_TypeDef TIM1_TIxExternalCLKSource,
                                    845 ;	-----------------------------------------
                                    846 ;	 function TIM1_TIxExternalClockConfig
                                    847 ;	-----------------------------------------
      0003F4                        848 _TIM1_TIxExternalClockConfig:
                                    849 ;	libstm8s/src/stm8s_tim1.c: 761: if (TIM1_TIxExternalCLKSource == TIM1_TIXEXTERNALCLK1SOURCE_TI2)
      0003F4 7B 03            [ 1]  850 	ld	a, (0x03, sp)
      0003F6 A1 60            [ 1]  851 	cp	a, #0x60
      0003F8 26 0F            [ 1]  852 	jrne	00102$
                                    853 ;	libstm8s/src/stm8s_tim1.c: 763: TI2_Config((uint8_t)TIM1_ICPolarity, (uint8_t)TIM1_ICSELECTION_DIRECTTI, (uint8_t)ICFilter);
      0003FA 7B 05            [ 1]  854 	ld	a, (0x05, sp)
      0003FC 88               [ 1]  855 	push	a
      0003FD 4B 01            [ 1]  856 	push	#0x01
      0003FF 7B 06            [ 1]  857 	ld	a, (0x06, sp)
      000401 88               [ 1]  858 	push	a
      000402 CDr09r92         [ 4]  859 	call	_TI2_Config
      000405 5B 03            [ 2]  860 	addw	sp, #3
      000407 20 0D            [ 2]  861 	jra	00103$
      000409                        862 00102$:
                                    863 ;	libstm8s/src/stm8s_tim1.c: 767: TI1_Config((uint8_t)TIM1_ICPolarity, (uint8_t)TIM1_ICSELECTION_DIRECTTI, (uint8_t)ICFilter);
      000409 7B 05            [ 1]  864 	ld	a, (0x05, sp)
      00040B 88               [ 1]  865 	push	a
      00040C 4B 01            [ 1]  866 	push	#0x01
      00040E 7B 06            [ 1]  867 	ld	a, (0x06, sp)
      000410 88               [ 1]  868 	push	a
      000411 CDr09r5E         [ 4]  869 	call	_TI1_Config
      000414 5B 03            [ 2]  870 	addw	sp, #3
      000416                        871 00103$:
                                    872 ;	libstm8s/src/stm8s_tim1.c: 771: TIM1_SelectInputTrigger((TIM1_TS_TypeDef)TIM1_TIxExternalCLKSource);
      000416 7B 03            [ 1]  873 	ld	a, (0x03, sp)
      000418 88               [ 1]  874 	push	a
      000419 CDr04r25         [ 4]  875 	call	_TIM1_SelectInputTrigger
      00041C 84               [ 1]  876 	pop	a
                                    877 ;	libstm8s/src/stm8s_tim1.c: 774: TIM1->SMCR |= (uint8_t)(TIM1_SLAVEMODE_EXTERNAL1);
      00041D AE 52 52         [ 2]  878 	ldw	x, #0x5252
      000420 F6               [ 1]  879 	ld	a, (x)
      000421 AA 07            [ 1]  880 	or	a, #0x07
      000423 F7               [ 1]  881 	ld	(x), a
      000424 81               [ 4]  882 	ret
                                    883 ;	libstm8s/src/stm8s_tim1.c: 787: void TIM1_SelectInputTrigger(TIM1_TS_TypeDef TIM1_InputTriggerSource)
                                    884 ;	-----------------------------------------
                                    885 ;	 function TIM1_SelectInputTrigger
                                    886 ;	-----------------------------------------
      000425                        887 _TIM1_SelectInputTrigger:
                                    888 ;	libstm8s/src/stm8s_tim1.c: 793: TIM1->SMCR = (uint8_t)((uint8_t)(TIM1->SMCR & (uint8_t)(~TIM1_SMCR_TS)) | (uint8_t)TIM1_InputTriggerSource);
      000425 AE 52 52         [ 2]  889 	ldw	x, #0x5252
      000428 F6               [ 1]  890 	ld	a, (x)
      000429 A4 8F            [ 1]  891 	and	a, #0x8f
      00042B 1A 03            [ 1]  892 	or	a, (0x03, sp)
      00042D AE 52 52         [ 2]  893 	ldw	x, #0x5252
      000430 F7               [ 1]  894 	ld	(x), a
      000431 81               [ 4]  895 	ret
                                    896 ;	libstm8s/src/stm8s_tim1.c: 803: void TIM1_UpdateDisableConfig(FunctionalState NewState)
                                    897 ;	-----------------------------------------
                                    898 ;	 function TIM1_UpdateDisableConfig
                                    899 ;	-----------------------------------------
      000432                        900 _TIM1_UpdateDisableConfig:
                                    901 ;	libstm8s/src/stm8s_tim1.c: 809: if (NewState != DISABLE)
      000432 0D 03            [ 1]  902 	tnz	(0x03, sp)
      000434 27 09            [ 1]  903 	jreq	00102$
                                    904 ;	libstm8s/src/stm8s_tim1.c: 811: TIM1->CR1 |= TIM1_CR1_UDIS;
      000436 AE 52 50         [ 2]  905 	ldw	x, #0x5250
      000439 F6               [ 1]  906 	ld	a, (x)
      00043A AA 02            [ 1]  907 	or	a, #0x02
      00043C F7               [ 1]  908 	ld	(x), a
      00043D 20 07            [ 2]  909 	jra	00104$
      00043F                        910 00102$:
                                    911 ;	libstm8s/src/stm8s_tim1.c: 815: TIM1->CR1 &= (uint8_t)(~TIM1_CR1_UDIS);
      00043F AE 52 50         [ 2]  912 	ldw	x, #0x5250
      000442 F6               [ 1]  913 	ld	a, (x)
      000443 A4 FD            [ 1]  914 	and	a, #0xfd
      000445 F7               [ 1]  915 	ld	(x), a
      000446                        916 00104$:
      000446 81               [ 4]  917 	ret
                                    918 ;	libstm8s/src/stm8s_tim1.c: 827: void TIM1_UpdateRequestConfig(TIM1_UpdateSource_TypeDef TIM1_UpdateSource)
                                    919 ;	-----------------------------------------
                                    920 ;	 function TIM1_UpdateRequestConfig
                                    921 ;	-----------------------------------------
      000447                        922 _TIM1_UpdateRequestConfig:
                                    923 ;	libstm8s/src/stm8s_tim1.c: 833: if (TIM1_UpdateSource != TIM1_UPDATESOURCE_GLOBAL)
      000447 0D 03            [ 1]  924 	tnz	(0x03, sp)
      000449 27 09            [ 1]  925 	jreq	00102$
                                    926 ;	libstm8s/src/stm8s_tim1.c: 835: TIM1->CR1 |= TIM1_CR1_URS;
      00044B AE 52 50         [ 2]  927 	ldw	x, #0x5250
      00044E F6               [ 1]  928 	ld	a, (x)
      00044F AA 04            [ 1]  929 	or	a, #0x04
      000451 F7               [ 1]  930 	ld	(x), a
      000452 20 07            [ 2]  931 	jra	00104$
      000454                        932 00102$:
                                    933 ;	libstm8s/src/stm8s_tim1.c: 839: TIM1->CR1 &= (uint8_t)(~TIM1_CR1_URS);
      000454 AE 52 50         [ 2]  934 	ldw	x, #0x5250
      000457 F6               [ 1]  935 	ld	a, (x)
      000458 A4 FB            [ 1]  936 	and	a, #0xfb
      00045A F7               [ 1]  937 	ld	(x), a
      00045B                        938 00104$:
      00045B 81               [ 4]  939 	ret
                                    940 ;	libstm8s/src/stm8s_tim1.c: 849: void TIM1_SelectHallSensor(FunctionalState NewState)
                                    941 ;	-----------------------------------------
                                    942 ;	 function TIM1_SelectHallSensor
                                    943 ;	-----------------------------------------
      00045C                        944 _TIM1_SelectHallSensor:
                                    945 ;	libstm8s/src/stm8s_tim1.c: 855: if (NewState != DISABLE)
      00045C 0D 03            [ 1]  946 	tnz	(0x03, sp)
      00045E 27 06            [ 1]  947 	jreq	00102$
                                    948 ;	libstm8s/src/stm8s_tim1.c: 857: TIM1->CR2 |= TIM1_CR2_TI1S;
      000460 72 1E 52 51      [ 1]  949 	bset	0x5251, #7
      000464 20 04            [ 2]  950 	jra	00104$
      000466                        951 00102$:
                                    952 ;	libstm8s/src/stm8s_tim1.c: 861: TIM1->CR2 &= (uint8_t)(~TIM1_CR2_TI1S);
      000466 72 1F 52 51      [ 1]  953 	bres	0x5251, #7
      00046A                        954 00104$:
      00046A 81               [ 4]  955 	ret
                                    956 ;	libstm8s/src/stm8s_tim1.c: 873: void TIM1_SelectOnePulseMode(TIM1_OPMode_TypeDef TIM1_OPMode)
                                    957 ;	-----------------------------------------
                                    958 ;	 function TIM1_SelectOnePulseMode
                                    959 ;	-----------------------------------------
      00046B                        960 _TIM1_SelectOnePulseMode:
                                    961 ;	libstm8s/src/stm8s_tim1.c: 879: if (TIM1_OPMode != TIM1_OPMODE_REPETITIVE)
      00046B 0D 03            [ 1]  962 	tnz	(0x03, sp)
      00046D 27 09            [ 1]  963 	jreq	00102$
                                    964 ;	libstm8s/src/stm8s_tim1.c: 881: TIM1->CR1 |= TIM1_CR1_OPM;
      00046F AE 52 50         [ 2]  965 	ldw	x, #0x5250
      000472 F6               [ 1]  966 	ld	a, (x)
      000473 AA 08            [ 1]  967 	or	a, #0x08
      000475 F7               [ 1]  968 	ld	(x), a
      000476 20 07            [ 2]  969 	jra	00104$
      000478                        970 00102$:
                                    971 ;	libstm8s/src/stm8s_tim1.c: 885: TIM1->CR1 &= (uint8_t)(~TIM1_CR1_OPM);
      000478 AE 52 50         [ 2]  972 	ldw	x, #0x5250
      00047B F6               [ 1]  973 	ld	a, (x)
      00047C A4 F7            [ 1]  974 	and	a, #0xf7
      00047E F7               [ 1]  975 	ld	(x), a
      00047F                        976 00104$:
      00047F 81               [ 4]  977 	ret
                                    978 ;	libstm8s/src/stm8s_tim1.c: 903: void TIM1_SelectOutputTrigger(TIM1_TRGOSource_TypeDef TIM1_TRGOSource)
                                    979 ;	-----------------------------------------
                                    980 ;	 function TIM1_SelectOutputTrigger
                                    981 ;	-----------------------------------------
      000480                        982 _TIM1_SelectOutputTrigger:
                                    983 ;	libstm8s/src/stm8s_tim1.c: 909: TIM1->CR2 = (uint8_t)((uint8_t)(TIM1->CR2 & (uint8_t)(~TIM1_CR2_MMS)) | 
      000480 AE 52 51         [ 2]  984 	ldw	x, #0x5251
      000483 F6               [ 1]  985 	ld	a, (x)
      000484 A4 8F            [ 1]  986 	and	a, #0x8f
                                    987 ;	libstm8s/src/stm8s_tim1.c: 910: (uint8_t) TIM1_TRGOSource);
      000486 1A 03            [ 1]  988 	or	a, (0x03, sp)
      000488 AE 52 51         [ 2]  989 	ldw	x, #0x5251
      00048B F7               [ 1]  990 	ld	(x), a
      00048C 81               [ 4]  991 	ret
                                    992 ;	libstm8s/src/stm8s_tim1.c: 923: void TIM1_SelectSlaveMode(TIM1_SlaveMode_TypeDef TIM1_SlaveMode)
                                    993 ;	-----------------------------------------
                                    994 ;	 function TIM1_SelectSlaveMode
                                    995 ;	-----------------------------------------
      00048D                        996 _TIM1_SelectSlaveMode:
                                    997 ;	libstm8s/src/stm8s_tim1.c: 929: TIM1->SMCR = (uint8_t)((uint8_t)(TIM1->SMCR & (uint8_t)(~TIM1_SMCR_SMS)) |
      00048D AE 52 52         [ 2]  998 	ldw	x, #0x5252
      000490 F6               [ 1]  999 	ld	a, (x)
      000491 A4 F8            [ 1] 1000 	and	a, #0xf8
                                   1001 ;	libstm8s/src/stm8s_tim1.c: 930: (uint8_t)TIM1_SlaveMode);
      000493 1A 03            [ 1] 1002 	or	a, (0x03, sp)
      000495 AE 52 52         [ 2] 1003 	ldw	x, #0x5252
      000498 F7               [ 1] 1004 	ld	(x), a
      000499 81               [ 4] 1005 	ret
                                   1006 ;	libstm8s/src/stm8s_tim1.c: 939: void TIM1_SelectMasterSlaveMode(FunctionalState NewState)
                                   1007 ;	-----------------------------------------
                                   1008 ;	 function TIM1_SelectMasterSlaveMode
                                   1009 ;	-----------------------------------------
      00049A                       1010 _TIM1_SelectMasterSlaveMode:
                                   1011 ;	libstm8s/src/stm8s_tim1.c: 945: if (NewState != DISABLE)
      00049A 0D 03            [ 1] 1012 	tnz	(0x03, sp)
      00049C 27 06            [ 1] 1013 	jreq	00102$
                                   1014 ;	libstm8s/src/stm8s_tim1.c: 947: TIM1->SMCR |= TIM1_SMCR_MSM;
      00049E 72 1E 52 52      [ 1] 1015 	bset	0x5252, #7
      0004A2 20 04            [ 2] 1016 	jra	00104$
      0004A4                       1017 00102$:
                                   1018 ;	libstm8s/src/stm8s_tim1.c: 951: TIM1->SMCR &= (uint8_t)(~TIM1_SMCR_MSM);
      0004A4 72 1F 52 52      [ 1] 1019 	bres	0x5252, #7
      0004A8                       1020 00104$:
      0004A8 81               [ 4] 1021 	ret
                                   1022 ;	libstm8s/src/stm8s_tim1.c: 975: void TIM1_EncoderInterfaceConfig(TIM1_EncoderMode_TypeDef TIM1_EncoderMode,
                                   1023 ;	-----------------------------------------
                                   1024 ;	 function TIM1_EncoderInterfaceConfig
                                   1025 ;	-----------------------------------------
      0004A9                       1026 _TIM1_EncoderInterfaceConfig:
                                   1027 ;	libstm8s/src/stm8s_tim1.c: 985: if (TIM1_IC1Polarity != TIM1_ICPOLARITY_RISING)
      0004A9 0D 04            [ 1] 1028 	tnz	(0x04, sp)
      0004AB 27 09            [ 1] 1029 	jreq	00102$
                                   1030 ;	libstm8s/src/stm8s_tim1.c: 987: TIM1->CCER1 |= TIM1_CCER1_CC1P;
      0004AD AE 52 5C         [ 2] 1031 	ldw	x, #0x525c
      0004B0 F6               [ 1] 1032 	ld	a, (x)
      0004B1 AA 02            [ 1] 1033 	or	a, #0x02
      0004B3 F7               [ 1] 1034 	ld	(x), a
      0004B4 20 07            [ 2] 1035 	jra	00103$
      0004B6                       1036 00102$:
                                   1037 ;	libstm8s/src/stm8s_tim1.c: 991: TIM1->CCER1 &= (uint8_t)(~TIM1_CCER1_CC1P);
      0004B6 AE 52 5C         [ 2] 1038 	ldw	x, #0x525c
      0004B9 F6               [ 1] 1039 	ld	a, (x)
      0004BA A4 FD            [ 1] 1040 	and	a, #0xfd
      0004BC F7               [ 1] 1041 	ld	(x), a
      0004BD                       1042 00103$:
                                   1043 ;	libstm8s/src/stm8s_tim1.c: 994: if (TIM1_IC2Polarity != TIM1_ICPOLARITY_RISING)
      0004BD 0D 05            [ 1] 1044 	tnz	(0x05, sp)
      0004BF 27 09            [ 1] 1045 	jreq	00105$
                                   1046 ;	libstm8s/src/stm8s_tim1.c: 996: TIM1->CCER1 |= TIM1_CCER1_CC2P;
      0004C1 AE 52 5C         [ 2] 1047 	ldw	x, #0x525c
      0004C4 F6               [ 1] 1048 	ld	a, (x)
      0004C5 AA 20            [ 1] 1049 	or	a, #0x20
      0004C7 F7               [ 1] 1050 	ld	(x), a
      0004C8 20 07            [ 2] 1051 	jra	00106$
      0004CA                       1052 00105$:
                                   1053 ;	libstm8s/src/stm8s_tim1.c: 1000: TIM1->CCER1 &= (uint8_t)(~TIM1_CCER1_CC2P);
      0004CA AE 52 5C         [ 2] 1054 	ldw	x, #0x525c
      0004CD F6               [ 1] 1055 	ld	a, (x)
      0004CE A4 DF            [ 1] 1056 	and	a, #0xdf
      0004D0 F7               [ 1] 1057 	ld	(x), a
      0004D1                       1058 00106$:
                                   1059 ;	libstm8s/src/stm8s_tim1.c: 1003: TIM1->SMCR = (uint8_t)((uint8_t)(TIM1->SMCR & (uint8_t)(TIM1_SMCR_MSM | TIM1_SMCR_TS))
      0004D1 AE 52 52         [ 2] 1060 	ldw	x, #0x5252
      0004D4 F6               [ 1] 1061 	ld	a, (x)
      0004D5 A4 F0            [ 1] 1062 	and	a, #0xf0
                                   1063 ;	libstm8s/src/stm8s_tim1.c: 1004: | (uint8_t) TIM1_EncoderMode);
      0004D7 1A 03            [ 1] 1064 	or	a, (0x03, sp)
      0004D9 AE 52 52         [ 2] 1065 	ldw	x, #0x5252
      0004DC F7               [ 1] 1066 	ld	(x), a
                                   1067 ;	libstm8s/src/stm8s_tim1.c: 1007: TIM1->CCMR1 = (uint8_t)((uint8_t)(TIM1->CCMR1 & (uint8_t)(~TIM1_CCMR_CCxS)) 
      0004DD AE 52 58         [ 2] 1068 	ldw	x, #0x5258
      0004E0 F6               [ 1] 1069 	ld	a, (x)
      0004E1 A4 FC            [ 1] 1070 	and	a, #0xfc
      0004E3 AA 01            [ 1] 1071 	or	a, #0x01
      0004E5 AE 52 58         [ 2] 1072 	ldw	x, #0x5258
      0004E8 F7               [ 1] 1073 	ld	(x), a
                                   1074 ;	libstm8s/src/stm8s_tim1.c: 1009: TIM1->CCMR2 = (uint8_t)((uint8_t)(TIM1->CCMR2 & (uint8_t)(~TIM1_CCMR_CCxS))
      0004E9 AE 52 59         [ 2] 1075 	ldw	x, #0x5259
      0004EC F6               [ 1] 1076 	ld	a, (x)
      0004ED A4 FC            [ 1] 1077 	and	a, #0xfc
      0004EF AA 01            [ 1] 1078 	or	a, #0x01
      0004F1 AE 52 59         [ 2] 1079 	ldw	x, #0x5259
      0004F4 F7               [ 1] 1080 	ld	(x), a
      0004F5 81               [ 4] 1081 	ret
                                   1082 ;	libstm8s/src/stm8s_tim1.c: 1023: void TIM1_PrescalerConfig(uint16_t Prescaler,
                                   1083 ;	-----------------------------------------
                                   1084 ;	 function TIM1_PrescalerConfig
                                   1085 ;	-----------------------------------------
      0004F6                       1086 _TIM1_PrescalerConfig:
      0004F6 89               [ 2] 1087 	pushw	x
                                   1088 ;	libstm8s/src/stm8s_tim1.c: 1030: TIM1->PSCRH = (uint8_t)(Prescaler >> 8);
      0004F7 7B 05            [ 1] 1089 	ld	a, (0x05, sp)
      0004F9 0F 01            [ 1] 1090 	clr	(0x01, sp)
      0004FB AE 52 60         [ 2] 1091 	ldw	x, #0x5260
      0004FE F7               [ 1] 1092 	ld	(x), a
                                   1093 ;	libstm8s/src/stm8s_tim1.c: 1031: TIM1->PSCRL = (uint8_t)(Prescaler);
      0004FF 7B 06            [ 1] 1094 	ld	a, (0x06, sp)
      000501 AE 52 61         [ 2] 1095 	ldw	x, #0x5261
      000504 F7               [ 1] 1096 	ld	(x), a
                                   1097 ;	libstm8s/src/stm8s_tim1.c: 1034: TIM1->EGR = (uint8_t)TIM1_PSCReloadMode;
      000505 AE 52 57         [ 2] 1098 	ldw	x, #0x5257
      000508 7B 07            [ 1] 1099 	ld	a, (0x07, sp)
      00050A F7               [ 1] 1100 	ld	(x), a
      00050B 85               [ 2] 1101 	popw	x
      00050C 81               [ 4] 1102 	ret
                                   1103 ;	libstm8s/src/stm8s_tim1.c: 1048: void TIM1_CounterModeConfig(TIM1_CounterMode_TypeDef TIM1_CounterMode)
                                   1104 ;	-----------------------------------------
                                   1105 ;	 function TIM1_CounterModeConfig
                                   1106 ;	-----------------------------------------
      00050D                       1107 _TIM1_CounterModeConfig:
                                   1108 ;	libstm8s/src/stm8s_tim1.c: 1055: TIM1->CR1 = (uint8_t)((uint8_t)(TIM1->CR1 & (uint8_t)((uint8_t)(~TIM1_CR1_CMS) & (uint8_t)(~TIM1_CR1_DIR)))
      00050D AE 52 50         [ 2] 1109 	ldw	x, #0x5250
      000510 F6               [ 1] 1110 	ld	a, (x)
      000511 A4 8F            [ 1] 1111 	and	a, #0x8f
                                   1112 ;	libstm8s/src/stm8s_tim1.c: 1056: | (uint8_t)TIM1_CounterMode);
      000513 1A 03            [ 1] 1113 	or	a, (0x03, sp)
      000515 AE 52 50         [ 2] 1114 	ldw	x, #0x5250
      000518 F7               [ 1] 1115 	ld	(x), a
      000519 81               [ 4] 1116 	ret
                                   1117 ;	libstm8s/src/stm8s_tim1.c: 1067: void TIM1_ForcedOC1Config(TIM1_ForcedAction_TypeDef TIM1_ForcedAction)
                                   1118 ;	-----------------------------------------
                                   1119 ;	 function TIM1_ForcedOC1Config
                                   1120 ;	-----------------------------------------
      00051A                       1121 _TIM1_ForcedOC1Config:
                                   1122 ;	libstm8s/src/stm8s_tim1.c: 1073: TIM1->CCMR1 =  (uint8_t)((uint8_t)(TIM1->CCMR1 & (uint8_t)(~TIM1_CCMR_OCM))|
      00051A AE 52 58         [ 2] 1123 	ldw	x, #0x5258
      00051D F6               [ 1] 1124 	ld	a, (x)
      00051E A4 8F            [ 1] 1125 	and	a, #0x8f
                                   1126 ;	libstm8s/src/stm8s_tim1.c: 1074: (uint8_t)TIM1_ForcedAction);
      000520 1A 03            [ 1] 1127 	or	a, (0x03, sp)
      000522 AE 52 58         [ 2] 1128 	ldw	x, #0x5258
      000525 F7               [ 1] 1129 	ld	(x), a
      000526 81               [ 4] 1130 	ret
                                   1131 ;	libstm8s/src/stm8s_tim1.c: 1085: void TIM1_ForcedOC2Config(TIM1_ForcedAction_TypeDef TIM1_ForcedAction)
                                   1132 ;	-----------------------------------------
                                   1133 ;	 function TIM1_ForcedOC2Config
                                   1134 ;	-----------------------------------------
      000527                       1135 _TIM1_ForcedOC2Config:
                                   1136 ;	libstm8s/src/stm8s_tim1.c: 1091: TIM1->CCMR2  =  (uint8_t)((uint8_t)(TIM1->CCMR2 & (uint8_t)(~TIM1_CCMR_OCM))
      000527 AE 52 59         [ 2] 1137 	ldw	x, #0x5259
      00052A F6               [ 1] 1138 	ld	a, (x)
      00052B A4 8F            [ 1] 1139 	and	a, #0x8f
                                   1140 ;	libstm8s/src/stm8s_tim1.c: 1092: | (uint8_t)TIM1_ForcedAction);
      00052D 1A 03            [ 1] 1141 	or	a, (0x03, sp)
      00052F AE 52 59         [ 2] 1142 	ldw	x, #0x5259
      000532 F7               [ 1] 1143 	ld	(x), a
      000533 81               [ 4] 1144 	ret
                                   1145 ;	libstm8s/src/stm8s_tim1.c: 1104: void TIM1_ForcedOC3Config(TIM1_ForcedAction_TypeDef TIM1_ForcedAction)
                                   1146 ;	-----------------------------------------
                                   1147 ;	 function TIM1_ForcedOC3Config
                                   1148 ;	-----------------------------------------
      000534                       1149 _TIM1_ForcedOC3Config:
                                   1150 ;	libstm8s/src/stm8s_tim1.c: 1110: TIM1->CCMR3  =  (uint8_t)((uint8_t)(TIM1->CCMR3 & (uint8_t)(~TIM1_CCMR_OCM))  
      000534 AE 52 5A         [ 2] 1151 	ldw	x, #0x525a
      000537 F6               [ 1] 1152 	ld	a, (x)
      000538 A4 8F            [ 1] 1153 	and	a, #0x8f
                                   1154 ;	libstm8s/src/stm8s_tim1.c: 1111: | (uint8_t)TIM1_ForcedAction);
      00053A 1A 03            [ 1] 1155 	or	a, (0x03, sp)
      00053C AE 52 5A         [ 2] 1156 	ldw	x, #0x525a
      00053F F7               [ 1] 1157 	ld	(x), a
      000540 81               [ 4] 1158 	ret
                                   1159 ;	libstm8s/src/stm8s_tim1.c: 1123: void TIM1_ForcedOC4Config(TIM1_ForcedAction_TypeDef TIM1_ForcedAction)
                                   1160 ;	-----------------------------------------
                                   1161 ;	 function TIM1_ForcedOC4Config
                                   1162 ;	-----------------------------------------
      000541                       1163 _TIM1_ForcedOC4Config:
                                   1164 ;	libstm8s/src/stm8s_tim1.c: 1129: TIM1->CCMR4  =  (uint8_t)((uint8_t)(TIM1->CCMR4 & (uint8_t)(~TIM1_CCMR_OCM)) 
      000541 AE 52 5B         [ 2] 1165 	ldw	x, #0x525b
      000544 F6               [ 1] 1166 	ld	a, (x)
      000545 A4 8F            [ 1] 1167 	and	a, #0x8f
                                   1168 ;	libstm8s/src/stm8s_tim1.c: 1130: | (uint8_t)TIM1_ForcedAction);
      000547 1A 03            [ 1] 1169 	or	a, (0x03, sp)
      000549 AE 52 5B         [ 2] 1170 	ldw	x, #0x525b
      00054C F7               [ 1] 1171 	ld	(x), a
      00054D 81               [ 4] 1172 	ret
                                   1173 ;	libstm8s/src/stm8s_tim1.c: 1139: void TIM1_ARRPreloadConfig(FunctionalState NewState)
                                   1174 ;	-----------------------------------------
                                   1175 ;	 function TIM1_ARRPreloadConfig
                                   1176 ;	-----------------------------------------
      00054E                       1177 _TIM1_ARRPreloadConfig:
                                   1178 ;	libstm8s/src/stm8s_tim1.c: 1145: if (NewState != DISABLE)
      00054E 0D 03            [ 1] 1179 	tnz	(0x03, sp)
      000550 27 06            [ 1] 1180 	jreq	00102$
                                   1181 ;	libstm8s/src/stm8s_tim1.c: 1147: TIM1->CR1 |= TIM1_CR1_ARPE;
      000552 72 1E 52 50      [ 1] 1182 	bset	0x5250, #7
      000556 20 04            [ 2] 1183 	jra	00104$
      000558                       1184 00102$:
                                   1185 ;	libstm8s/src/stm8s_tim1.c: 1151: TIM1->CR1 &= (uint8_t)(~TIM1_CR1_ARPE);
      000558 72 1F 52 50      [ 1] 1186 	bres	0x5250, #7
      00055C                       1187 00104$:
      00055C 81               [ 4] 1188 	ret
                                   1189 ;	libstm8s/src/stm8s_tim1.c: 1161: void TIM1_SelectCOM(FunctionalState NewState)
                                   1190 ;	-----------------------------------------
                                   1191 ;	 function TIM1_SelectCOM
                                   1192 ;	-----------------------------------------
      00055D                       1193 _TIM1_SelectCOM:
                                   1194 ;	libstm8s/src/stm8s_tim1.c: 1167: if (NewState != DISABLE)
      00055D 0D 03            [ 1] 1195 	tnz	(0x03, sp)
      00055F 27 09            [ 1] 1196 	jreq	00102$
                                   1197 ;	libstm8s/src/stm8s_tim1.c: 1169: TIM1->CR2 |= TIM1_CR2_COMS;
      000561 AE 52 51         [ 2] 1198 	ldw	x, #0x5251
      000564 F6               [ 1] 1199 	ld	a, (x)
      000565 AA 04            [ 1] 1200 	or	a, #0x04
      000567 F7               [ 1] 1201 	ld	(x), a
      000568 20 07            [ 2] 1202 	jra	00104$
      00056A                       1203 00102$:
                                   1204 ;	libstm8s/src/stm8s_tim1.c: 1173: TIM1->CR2 &= (uint8_t)(~TIM1_CR2_COMS);
      00056A AE 52 51         [ 2] 1205 	ldw	x, #0x5251
      00056D F6               [ 1] 1206 	ld	a, (x)
      00056E A4 FB            [ 1] 1207 	and	a, #0xfb
      000570 F7               [ 1] 1208 	ld	(x), a
      000571                       1209 00104$:
      000571 81               [ 4] 1210 	ret
                                   1211 ;	libstm8s/src/stm8s_tim1.c: 1183: void TIM1_CCPreloadControl(FunctionalState NewState)
                                   1212 ;	-----------------------------------------
                                   1213 ;	 function TIM1_CCPreloadControl
                                   1214 ;	-----------------------------------------
      000572                       1215 _TIM1_CCPreloadControl:
                                   1216 ;	libstm8s/src/stm8s_tim1.c: 1189: if (NewState != DISABLE)
      000572 0D 03            [ 1] 1217 	tnz	(0x03, sp)
      000574 27 06            [ 1] 1218 	jreq	00102$
                                   1219 ;	libstm8s/src/stm8s_tim1.c: 1191: TIM1->CR2 |= TIM1_CR2_CCPC;
      000576 72 10 52 51      [ 1] 1220 	bset	0x5251, #0
      00057A 20 04            [ 2] 1221 	jra	00104$
      00057C                       1222 00102$:
                                   1223 ;	libstm8s/src/stm8s_tim1.c: 1195: TIM1->CR2 &= (uint8_t)(~TIM1_CR2_CCPC);
      00057C 72 11 52 51      [ 1] 1224 	bres	0x5251, #0
      000580                       1225 00104$:
      000580 81               [ 4] 1226 	ret
                                   1227 ;	libstm8s/src/stm8s_tim1.c: 1205: void TIM1_OC1PreloadConfig(FunctionalState NewState)
                                   1228 ;	-----------------------------------------
                                   1229 ;	 function TIM1_OC1PreloadConfig
                                   1230 ;	-----------------------------------------
      000581                       1231 _TIM1_OC1PreloadConfig:
                                   1232 ;	libstm8s/src/stm8s_tim1.c: 1211: if (NewState != DISABLE)
      000581 0D 03            [ 1] 1233 	tnz	(0x03, sp)
      000583 27 09            [ 1] 1234 	jreq	00102$
                                   1235 ;	libstm8s/src/stm8s_tim1.c: 1213: TIM1->CCMR1 |= TIM1_CCMR_OCxPE;
      000585 AE 52 58         [ 2] 1236 	ldw	x, #0x5258
      000588 F6               [ 1] 1237 	ld	a, (x)
      000589 AA 08            [ 1] 1238 	or	a, #0x08
      00058B F7               [ 1] 1239 	ld	(x), a
      00058C 20 07            [ 2] 1240 	jra	00104$
      00058E                       1241 00102$:
                                   1242 ;	libstm8s/src/stm8s_tim1.c: 1217: TIM1->CCMR1 &= (uint8_t)(~TIM1_CCMR_OCxPE);
      00058E AE 52 58         [ 2] 1243 	ldw	x, #0x5258
      000591 F6               [ 1] 1244 	ld	a, (x)
      000592 A4 F7            [ 1] 1245 	and	a, #0xf7
      000594 F7               [ 1] 1246 	ld	(x), a
      000595                       1247 00104$:
      000595 81               [ 4] 1248 	ret
                                   1249 ;	libstm8s/src/stm8s_tim1.c: 1227: void TIM1_OC2PreloadConfig(FunctionalState NewState)
                                   1250 ;	-----------------------------------------
                                   1251 ;	 function TIM1_OC2PreloadConfig
                                   1252 ;	-----------------------------------------
      000596                       1253 _TIM1_OC2PreloadConfig:
                                   1254 ;	libstm8s/src/stm8s_tim1.c: 1233: if (NewState != DISABLE)
      000596 0D 03            [ 1] 1255 	tnz	(0x03, sp)
      000598 27 09            [ 1] 1256 	jreq	00102$
                                   1257 ;	libstm8s/src/stm8s_tim1.c: 1235: TIM1->CCMR2 |= TIM1_CCMR_OCxPE;
      00059A AE 52 59         [ 2] 1258 	ldw	x, #0x5259
      00059D F6               [ 1] 1259 	ld	a, (x)
      00059E AA 08            [ 1] 1260 	or	a, #0x08
      0005A0 F7               [ 1] 1261 	ld	(x), a
      0005A1 20 07            [ 2] 1262 	jra	00104$
      0005A3                       1263 00102$:
                                   1264 ;	libstm8s/src/stm8s_tim1.c: 1239: TIM1->CCMR2 &= (uint8_t)(~TIM1_CCMR_OCxPE);
      0005A3 AE 52 59         [ 2] 1265 	ldw	x, #0x5259
      0005A6 F6               [ 1] 1266 	ld	a, (x)
      0005A7 A4 F7            [ 1] 1267 	and	a, #0xf7
      0005A9 F7               [ 1] 1268 	ld	(x), a
      0005AA                       1269 00104$:
      0005AA 81               [ 4] 1270 	ret
                                   1271 ;	libstm8s/src/stm8s_tim1.c: 1249: void TIM1_OC3PreloadConfig(FunctionalState NewState)
                                   1272 ;	-----------------------------------------
                                   1273 ;	 function TIM1_OC3PreloadConfig
                                   1274 ;	-----------------------------------------
      0005AB                       1275 _TIM1_OC3PreloadConfig:
                                   1276 ;	libstm8s/src/stm8s_tim1.c: 1255: if (NewState != DISABLE)
      0005AB 0D 03            [ 1] 1277 	tnz	(0x03, sp)
      0005AD 27 09            [ 1] 1278 	jreq	00102$
                                   1279 ;	libstm8s/src/stm8s_tim1.c: 1257: TIM1->CCMR3 |= TIM1_CCMR_OCxPE;
      0005AF AE 52 5A         [ 2] 1280 	ldw	x, #0x525a
      0005B2 F6               [ 1] 1281 	ld	a, (x)
      0005B3 AA 08            [ 1] 1282 	or	a, #0x08
      0005B5 F7               [ 1] 1283 	ld	(x), a
      0005B6 20 07            [ 2] 1284 	jra	00104$
      0005B8                       1285 00102$:
                                   1286 ;	libstm8s/src/stm8s_tim1.c: 1261: TIM1->CCMR3 &= (uint8_t)(~TIM1_CCMR_OCxPE);
      0005B8 AE 52 5A         [ 2] 1287 	ldw	x, #0x525a
      0005BB F6               [ 1] 1288 	ld	a, (x)
      0005BC A4 F7            [ 1] 1289 	and	a, #0xf7
      0005BE F7               [ 1] 1290 	ld	(x), a
      0005BF                       1291 00104$:
      0005BF 81               [ 4] 1292 	ret
                                   1293 ;	libstm8s/src/stm8s_tim1.c: 1271: void TIM1_OC4PreloadConfig(FunctionalState NewState)
                                   1294 ;	-----------------------------------------
                                   1295 ;	 function TIM1_OC4PreloadConfig
                                   1296 ;	-----------------------------------------
      0005C0                       1297 _TIM1_OC4PreloadConfig:
                                   1298 ;	libstm8s/src/stm8s_tim1.c: 1277: if (NewState != DISABLE)
      0005C0 0D 03            [ 1] 1299 	tnz	(0x03, sp)
      0005C2 27 09            [ 1] 1300 	jreq	00102$
                                   1301 ;	libstm8s/src/stm8s_tim1.c: 1279: TIM1->CCMR4 |= TIM1_CCMR_OCxPE;
      0005C4 AE 52 5B         [ 2] 1302 	ldw	x, #0x525b
      0005C7 F6               [ 1] 1303 	ld	a, (x)
      0005C8 AA 08            [ 1] 1304 	or	a, #0x08
      0005CA F7               [ 1] 1305 	ld	(x), a
      0005CB 20 07            [ 2] 1306 	jra	00104$
      0005CD                       1307 00102$:
                                   1308 ;	libstm8s/src/stm8s_tim1.c: 1283: TIM1->CCMR4 &= (uint8_t)(~TIM1_CCMR_OCxPE);
      0005CD AE 52 5B         [ 2] 1309 	ldw	x, #0x525b
      0005D0 F6               [ 1] 1310 	ld	a, (x)
      0005D1 A4 F7            [ 1] 1311 	and	a, #0xf7
      0005D3 F7               [ 1] 1312 	ld	(x), a
      0005D4                       1313 00104$:
      0005D4 81               [ 4] 1314 	ret
                                   1315 ;	libstm8s/src/stm8s_tim1.c: 1293: void TIM1_OC1FastConfig(FunctionalState NewState)
                                   1316 ;	-----------------------------------------
                                   1317 ;	 function TIM1_OC1FastConfig
                                   1318 ;	-----------------------------------------
      0005D5                       1319 _TIM1_OC1FastConfig:
                                   1320 ;	libstm8s/src/stm8s_tim1.c: 1299: if (NewState != DISABLE)
      0005D5 0D 03            [ 1] 1321 	tnz	(0x03, sp)
      0005D7 27 09            [ 1] 1322 	jreq	00102$
                                   1323 ;	libstm8s/src/stm8s_tim1.c: 1301: TIM1->CCMR1 |= TIM1_CCMR_OCxFE;
      0005D9 AE 52 58         [ 2] 1324 	ldw	x, #0x5258
      0005DC F6               [ 1] 1325 	ld	a, (x)
      0005DD AA 04            [ 1] 1326 	or	a, #0x04
      0005DF F7               [ 1] 1327 	ld	(x), a
      0005E0 20 07            [ 2] 1328 	jra	00104$
      0005E2                       1329 00102$:
                                   1330 ;	libstm8s/src/stm8s_tim1.c: 1305: TIM1->CCMR1 &= (uint8_t)(~TIM1_CCMR_OCxFE);
      0005E2 AE 52 58         [ 2] 1331 	ldw	x, #0x5258
      0005E5 F6               [ 1] 1332 	ld	a, (x)
      0005E6 A4 FB            [ 1] 1333 	and	a, #0xfb
      0005E8 F7               [ 1] 1334 	ld	(x), a
      0005E9                       1335 00104$:
      0005E9 81               [ 4] 1336 	ret
                                   1337 ;	libstm8s/src/stm8s_tim1.c: 1315: void TIM1_OC2FastConfig(FunctionalState NewState)
                                   1338 ;	-----------------------------------------
                                   1339 ;	 function TIM1_OC2FastConfig
                                   1340 ;	-----------------------------------------
      0005EA                       1341 _TIM1_OC2FastConfig:
                                   1342 ;	libstm8s/src/stm8s_tim1.c: 1321: if (NewState != DISABLE)
      0005EA 0D 03            [ 1] 1343 	tnz	(0x03, sp)
      0005EC 27 09            [ 1] 1344 	jreq	00102$
                                   1345 ;	libstm8s/src/stm8s_tim1.c: 1323: TIM1->CCMR2 |= TIM1_CCMR_OCxFE;
      0005EE AE 52 59         [ 2] 1346 	ldw	x, #0x5259
      0005F1 F6               [ 1] 1347 	ld	a, (x)
      0005F2 AA 04            [ 1] 1348 	or	a, #0x04
      0005F4 F7               [ 1] 1349 	ld	(x), a
      0005F5 20 07            [ 2] 1350 	jra	00104$
      0005F7                       1351 00102$:
                                   1352 ;	libstm8s/src/stm8s_tim1.c: 1327: TIM1->CCMR2 &= (uint8_t)(~TIM1_CCMR_OCxFE);
      0005F7 AE 52 59         [ 2] 1353 	ldw	x, #0x5259
      0005FA F6               [ 1] 1354 	ld	a, (x)
      0005FB A4 FB            [ 1] 1355 	and	a, #0xfb
      0005FD F7               [ 1] 1356 	ld	(x), a
      0005FE                       1357 00104$:
      0005FE 81               [ 4] 1358 	ret
                                   1359 ;	libstm8s/src/stm8s_tim1.c: 1337: void TIM1_OC3FastConfig(FunctionalState NewState)
                                   1360 ;	-----------------------------------------
                                   1361 ;	 function TIM1_OC3FastConfig
                                   1362 ;	-----------------------------------------
      0005FF                       1363 _TIM1_OC3FastConfig:
                                   1364 ;	libstm8s/src/stm8s_tim1.c: 1343: if (NewState != DISABLE)
      0005FF 0D 03            [ 1] 1365 	tnz	(0x03, sp)
      000601 27 09            [ 1] 1366 	jreq	00102$
                                   1367 ;	libstm8s/src/stm8s_tim1.c: 1345: TIM1->CCMR3 |= TIM1_CCMR_OCxFE;
      000603 AE 52 5A         [ 2] 1368 	ldw	x, #0x525a
      000606 F6               [ 1] 1369 	ld	a, (x)
      000607 AA 04            [ 1] 1370 	or	a, #0x04
      000609 F7               [ 1] 1371 	ld	(x), a
      00060A 20 07            [ 2] 1372 	jra	00104$
      00060C                       1373 00102$:
                                   1374 ;	libstm8s/src/stm8s_tim1.c: 1349: TIM1->CCMR3 &= (uint8_t)(~TIM1_CCMR_OCxFE);
      00060C AE 52 5A         [ 2] 1375 	ldw	x, #0x525a
      00060F F6               [ 1] 1376 	ld	a, (x)
      000610 A4 FB            [ 1] 1377 	and	a, #0xfb
      000612 F7               [ 1] 1378 	ld	(x), a
      000613                       1379 00104$:
      000613 81               [ 4] 1380 	ret
                                   1381 ;	libstm8s/src/stm8s_tim1.c: 1359: void TIM1_OC4FastConfig(FunctionalState NewState)
                                   1382 ;	-----------------------------------------
                                   1383 ;	 function TIM1_OC4FastConfig
                                   1384 ;	-----------------------------------------
      000614                       1385 _TIM1_OC4FastConfig:
                                   1386 ;	libstm8s/src/stm8s_tim1.c: 1365: if (NewState != DISABLE)
      000614 0D 03            [ 1] 1387 	tnz	(0x03, sp)
      000616 27 09            [ 1] 1388 	jreq	00102$
                                   1389 ;	libstm8s/src/stm8s_tim1.c: 1367: TIM1->CCMR4 |= TIM1_CCMR_OCxFE;
      000618 AE 52 5B         [ 2] 1390 	ldw	x, #0x525b
      00061B F6               [ 1] 1391 	ld	a, (x)
      00061C AA 04            [ 1] 1392 	or	a, #0x04
      00061E F7               [ 1] 1393 	ld	(x), a
      00061F 20 07            [ 2] 1394 	jra	00104$
      000621                       1395 00102$:
                                   1396 ;	libstm8s/src/stm8s_tim1.c: 1371: TIM1->CCMR4 &= (uint8_t)(~TIM1_CCMR_OCxFE);
      000621 AE 52 5B         [ 2] 1397 	ldw	x, #0x525b
      000624 F6               [ 1] 1398 	ld	a, (x)
      000625 A4 FB            [ 1] 1399 	and	a, #0xfb
      000627 F7               [ 1] 1400 	ld	(x), a
      000628                       1401 00104$:
      000628 81               [ 4] 1402 	ret
                                   1403 ;	libstm8s/src/stm8s_tim1.c: 1389: void TIM1_GenerateEvent(TIM1_EventSource_TypeDef TIM1_EventSource)
                                   1404 ;	-----------------------------------------
                                   1405 ;	 function TIM1_GenerateEvent
                                   1406 ;	-----------------------------------------
      000629                       1407 _TIM1_GenerateEvent:
                                   1408 ;	libstm8s/src/stm8s_tim1.c: 1395: TIM1->EGR = (uint8_t)TIM1_EventSource;
      000629 AE 52 57         [ 2] 1409 	ldw	x, #0x5257
      00062C 7B 03            [ 1] 1410 	ld	a, (0x03, sp)
      00062E F7               [ 1] 1411 	ld	(x), a
      00062F 81               [ 4] 1412 	ret
                                   1413 ;	libstm8s/src/stm8s_tim1.c: 1406: void TIM1_OC1PolarityConfig(TIM1_OCPolarity_TypeDef TIM1_OCPolarity)
                                   1414 ;	-----------------------------------------
                                   1415 ;	 function TIM1_OC1PolarityConfig
                                   1416 ;	-----------------------------------------
      000630                       1417 _TIM1_OC1PolarityConfig:
                                   1418 ;	libstm8s/src/stm8s_tim1.c: 1412: if (TIM1_OCPolarity != TIM1_OCPOLARITY_HIGH)
      000630 0D 03            [ 1] 1419 	tnz	(0x03, sp)
      000632 27 09            [ 1] 1420 	jreq	00102$
                                   1421 ;	libstm8s/src/stm8s_tim1.c: 1414: TIM1->CCER1 |= TIM1_CCER1_CC1P;
      000634 AE 52 5C         [ 2] 1422 	ldw	x, #0x525c
      000637 F6               [ 1] 1423 	ld	a, (x)
      000638 AA 02            [ 1] 1424 	or	a, #0x02
      00063A F7               [ 1] 1425 	ld	(x), a
      00063B 20 07            [ 2] 1426 	jra	00104$
      00063D                       1427 00102$:
                                   1428 ;	libstm8s/src/stm8s_tim1.c: 1418: TIM1->CCER1 &= (uint8_t)(~TIM1_CCER1_CC1P);
      00063D AE 52 5C         [ 2] 1429 	ldw	x, #0x525c
      000640 F6               [ 1] 1430 	ld	a, (x)
      000641 A4 FD            [ 1] 1431 	and	a, #0xfd
      000643 F7               [ 1] 1432 	ld	(x), a
      000644                       1433 00104$:
      000644 81               [ 4] 1434 	ret
                                   1435 ;	libstm8s/src/stm8s_tim1.c: 1430: void TIM1_OC1NPolarityConfig(TIM1_OCNPolarity_TypeDef TIM1_OCNPolarity)
                                   1436 ;	-----------------------------------------
                                   1437 ;	 function TIM1_OC1NPolarityConfig
                                   1438 ;	-----------------------------------------
      000645                       1439 _TIM1_OC1NPolarityConfig:
                                   1440 ;	libstm8s/src/stm8s_tim1.c: 1436: if (TIM1_OCNPolarity != TIM1_OCNPOLARITY_HIGH)
      000645 0D 03            [ 1] 1441 	tnz	(0x03, sp)
      000647 27 09            [ 1] 1442 	jreq	00102$
                                   1443 ;	libstm8s/src/stm8s_tim1.c: 1438: TIM1->CCER1 |= TIM1_CCER1_CC1NP;
      000649 AE 52 5C         [ 2] 1444 	ldw	x, #0x525c
      00064C F6               [ 1] 1445 	ld	a, (x)
      00064D AA 08            [ 1] 1446 	or	a, #0x08
      00064F F7               [ 1] 1447 	ld	(x), a
      000650 20 07            [ 2] 1448 	jra	00104$
      000652                       1449 00102$:
                                   1450 ;	libstm8s/src/stm8s_tim1.c: 1442: TIM1->CCER1 &= (uint8_t)(~TIM1_CCER1_CC1NP);
      000652 AE 52 5C         [ 2] 1451 	ldw	x, #0x525c
      000655 F6               [ 1] 1452 	ld	a, (x)
      000656 A4 F7            [ 1] 1453 	and	a, #0xf7
      000658 F7               [ 1] 1454 	ld	(x), a
      000659                       1455 00104$:
      000659 81               [ 4] 1456 	ret
                                   1457 ;	libstm8s/src/stm8s_tim1.c: 1454: void TIM1_OC2PolarityConfig(TIM1_OCPolarity_TypeDef TIM1_OCPolarity)
                                   1458 ;	-----------------------------------------
                                   1459 ;	 function TIM1_OC2PolarityConfig
                                   1460 ;	-----------------------------------------
      00065A                       1461 _TIM1_OC2PolarityConfig:
                                   1462 ;	libstm8s/src/stm8s_tim1.c: 1460: if (TIM1_OCPolarity != TIM1_OCPOLARITY_HIGH)
      00065A 0D 03            [ 1] 1463 	tnz	(0x03, sp)
      00065C 27 09            [ 1] 1464 	jreq	00102$
                                   1465 ;	libstm8s/src/stm8s_tim1.c: 1462: TIM1->CCER1 |= TIM1_CCER1_CC2P;
      00065E AE 52 5C         [ 2] 1466 	ldw	x, #0x525c
      000661 F6               [ 1] 1467 	ld	a, (x)
      000662 AA 20            [ 1] 1468 	or	a, #0x20
      000664 F7               [ 1] 1469 	ld	(x), a
      000665 20 07            [ 2] 1470 	jra	00104$
      000667                       1471 00102$:
                                   1472 ;	libstm8s/src/stm8s_tim1.c: 1466: TIM1->CCER1 &= (uint8_t)(~TIM1_CCER1_CC2P);
      000667 AE 52 5C         [ 2] 1473 	ldw	x, #0x525c
      00066A F6               [ 1] 1474 	ld	a, (x)
      00066B A4 DF            [ 1] 1475 	and	a, #0xdf
      00066D F7               [ 1] 1476 	ld	(x), a
      00066E                       1477 00104$:
      00066E 81               [ 4] 1478 	ret
                                   1479 ;	libstm8s/src/stm8s_tim1.c: 1478: void TIM1_OC2NPolarityConfig(TIM1_OCNPolarity_TypeDef TIM1_OCNPolarity)
                                   1480 ;	-----------------------------------------
                                   1481 ;	 function TIM1_OC2NPolarityConfig
                                   1482 ;	-----------------------------------------
      00066F                       1483 _TIM1_OC2NPolarityConfig:
                                   1484 ;	libstm8s/src/stm8s_tim1.c: 1484: if (TIM1_OCNPolarity != TIM1_OCNPOLARITY_HIGH)
      00066F 0D 03            [ 1] 1485 	tnz	(0x03, sp)
      000671 27 06            [ 1] 1486 	jreq	00102$
                                   1487 ;	libstm8s/src/stm8s_tim1.c: 1486: TIM1->CCER1 |= TIM1_CCER1_CC2NP;
      000673 72 1E 52 5C      [ 1] 1488 	bset	0x525c, #7
      000677 20 04            [ 2] 1489 	jra	00104$
      000679                       1490 00102$:
                                   1491 ;	libstm8s/src/stm8s_tim1.c: 1490: TIM1->CCER1 &= (uint8_t)(~TIM1_CCER1_CC2NP);
      000679 72 1F 52 5C      [ 1] 1492 	bres	0x525c, #7
      00067D                       1493 00104$:
      00067D 81               [ 4] 1494 	ret
                                   1495 ;	libstm8s/src/stm8s_tim1.c: 1502: void TIM1_OC3PolarityConfig(TIM1_OCPolarity_TypeDef TIM1_OCPolarity)
                                   1496 ;	-----------------------------------------
                                   1497 ;	 function TIM1_OC3PolarityConfig
                                   1498 ;	-----------------------------------------
      00067E                       1499 _TIM1_OC3PolarityConfig:
                                   1500 ;	libstm8s/src/stm8s_tim1.c: 1508: if (TIM1_OCPolarity != TIM1_OCPOLARITY_HIGH)
      00067E 0D 03            [ 1] 1501 	tnz	(0x03, sp)
      000680 27 09            [ 1] 1502 	jreq	00102$
                                   1503 ;	libstm8s/src/stm8s_tim1.c: 1510: TIM1->CCER2 |= TIM1_CCER2_CC3P;
      000682 AE 52 5D         [ 2] 1504 	ldw	x, #0x525d
      000685 F6               [ 1] 1505 	ld	a, (x)
      000686 AA 02            [ 1] 1506 	or	a, #0x02
      000688 F7               [ 1] 1507 	ld	(x), a
      000689 20 07            [ 2] 1508 	jra	00104$
      00068B                       1509 00102$:
                                   1510 ;	libstm8s/src/stm8s_tim1.c: 1514: TIM1->CCER2 &= (uint8_t)(~TIM1_CCER2_CC3P);
      00068B AE 52 5D         [ 2] 1511 	ldw	x, #0x525d
      00068E F6               [ 1] 1512 	ld	a, (x)
      00068F A4 FD            [ 1] 1513 	and	a, #0xfd
      000691 F7               [ 1] 1514 	ld	(x), a
      000692                       1515 00104$:
      000692 81               [ 4] 1516 	ret
                                   1517 ;	libstm8s/src/stm8s_tim1.c: 1527: void TIM1_OC3NPolarityConfig(TIM1_OCNPolarity_TypeDef TIM1_OCNPolarity)
                                   1518 ;	-----------------------------------------
                                   1519 ;	 function TIM1_OC3NPolarityConfig
                                   1520 ;	-----------------------------------------
      000693                       1521 _TIM1_OC3NPolarityConfig:
                                   1522 ;	libstm8s/src/stm8s_tim1.c: 1533: if (TIM1_OCNPolarity != TIM1_OCNPOLARITY_HIGH)
      000693 0D 03            [ 1] 1523 	tnz	(0x03, sp)
      000695 27 09            [ 1] 1524 	jreq	00102$
                                   1525 ;	libstm8s/src/stm8s_tim1.c: 1535: TIM1->CCER2 |= TIM1_CCER2_CC3NP;
      000697 AE 52 5D         [ 2] 1526 	ldw	x, #0x525d
      00069A F6               [ 1] 1527 	ld	a, (x)
      00069B AA 08            [ 1] 1528 	or	a, #0x08
      00069D F7               [ 1] 1529 	ld	(x), a
      00069E 20 07            [ 2] 1530 	jra	00104$
      0006A0                       1531 00102$:
                                   1532 ;	libstm8s/src/stm8s_tim1.c: 1539: TIM1->CCER2 &= (uint8_t)(~TIM1_CCER2_CC3NP);
      0006A0 AE 52 5D         [ 2] 1533 	ldw	x, #0x525d
      0006A3 F6               [ 1] 1534 	ld	a, (x)
      0006A4 A4 F7            [ 1] 1535 	and	a, #0xf7
      0006A6 F7               [ 1] 1536 	ld	(x), a
      0006A7                       1537 00104$:
      0006A7 81               [ 4] 1538 	ret
                                   1539 ;	libstm8s/src/stm8s_tim1.c: 1551: void TIM1_OC4PolarityConfig(TIM1_OCPolarity_TypeDef TIM1_OCPolarity)
                                   1540 ;	-----------------------------------------
                                   1541 ;	 function TIM1_OC4PolarityConfig
                                   1542 ;	-----------------------------------------
      0006A8                       1543 _TIM1_OC4PolarityConfig:
                                   1544 ;	libstm8s/src/stm8s_tim1.c: 1557: if (TIM1_OCPolarity != TIM1_OCPOLARITY_HIGH)
      0006A8 0D 03            [ 1] 1545 	tnz	(0x03, sp)
      0006AA 27 09            [ 1] 1546 	jreq	00102$
                                   1547 ;	libstm8s/src/stm8s_tim1.c: 1559: TIM1->CCER2 |= TIM1_CCER2_CC4P;
      0006AC AE 52 5D         [ 2] 1548 	ldw	x, #0x525d
      0006AF F6               [ 1] 1549 	ld	a, (x)
      0006B0 AA 20            [ 1] 1550 	or	a, #0x20
      0006B2 F7               [ 1] 1551 	ld	(x), a
      0006B3 20 07            [ 2] 1552 	jra	00104$
      0006B5                       1553 00102$:
                                   1554 ;	libstm8s/src/stm8s_tim1.c: 1563: TIM1->CCER2 &= (uint8_t)(~TIM1_CCER2_CC4P);
      0006B5 AE 52 5D         [ 2] 1555 	ldw	x, #0x525d
      0006B8 F6               [ 1] 1556 	ld	a, (x)
      0006B9 A4 DF            [ 1] 1557 	and	a, #0xdf
      0006BB F7               [ 1] 1558 	ld	(x), a
      0006BC                       1559 00104$:
      0006BC 81               [ 4] 1560 	ret
                                   1561 ;	libstm8s/src/stm8s_tim1.c: 1579: void TIM1_CCxCmd(TIM1_Channel_TypeDef TIM1_Channel, FunctionalState NewState)
                                   1562 ;	-----------------------------------------
                                   1563 ;	 function TIM1_CCxCmd
                                   1564 ;	-----------------------------------------
      0006BD                       1565 _TIM1_CCxCmd:
                                   1566 ;	libstm8s/src/stm8s_tim1.c: 1585: if (TIM1_Channel == TIM1_CHANNEL_1)
      0006BD 0D 03            [ 1] 1567 	tnz	(0x03, sp)
      0006BF 26 10            [ 1] 1568 	jrne	00120$
                                   1569 ;	libstm8s/src/stm8s_tim1.c: 1588: if (NewState != DISABLE)
      0006C1 0D 04            [ 1] 1570 	tnz	(0x04, sp)
      0006C3 27 06            [ 1] 1571 	jreq	00102$
                                   1572 ;	libstm8s/src/stm8s_tim1.c: 1590: TIM1->CCER1 |= TIM1_CCER1_CC1E;
      0006C5 72 10 52 5C      [ 1] 1573 	bset	0x525c, #0
      0006C9 20 4C            [ 2] 1574 	jra	00122$
      0006CB                       1575 00102$:
                                   1576 ;	libstm8s/src/stm8s_tim1.c: 1594: TIM1->CCER1 &= (uint8_t)(~TIM1_CCER1_CC1E);
      0006CB 72 11 52 5C      [ 1] 1577 	bres	0x525c, #0
      0006CF 20 46            [ 2] 1578 	jra	00122$
      0006D1                       1579 00120$:
                                   1580 ;	libstm8s/src/stm8s_tim1.c: 1598: else if (TIM1_Channel == TIM1_CHANNEL_2)
      0006D1 7B 03            [ 1] 1581 	ld	a, (0x03, sp)
      0006D3 A1 01            [ 1] 1582 	cp	a, #0x01
      0006D5 26 16            [ 1] 1583 	jrne	00117$
                                   1584 ;	libstm8s/src/stm8s_tim1.c: 1601: if (NewState != DISABLE)
      0006D7 0D 04            [ 1] 1585 	tnz	(0x04, sp)
      0006D9 27 09            [ 1] 1586 	jreq	00105$
                                   1587 ;	libstm8s/src/stm8s_tim1.c: 1603: TIM1->CCER1 |= TIM1_CCER1_CC2E;
      0006DB AE 52 5C         [ 2] 1588 	ldw	x, #0x525c
      0006DE F6               [ 1] 1589 	ld	a, (x)
      0006DF AA 10            [ 1] 1590 	or	a, #0x10
      0006E1 F7               [ 1] 1591 	ld	(x), a
      0006E2 20 33            [ 2] 1592 	jra	00122$
      0006E4                       1593 00105$:
                                   1594 ;	libstm8s/src/stm8s_tim1.c: 1607: TIM1->CCER1 &= (uint8_t)(~TIM1_CCER1_CC2E);
      0006E4 AE 52 5C         [ 2] 1595 	ldw	x, #0x525c
      0006E7 F6               [ 1] 1596 	ld	a, (x)
      0006E8 A4 EF            [ 1] 1597 	and	a, #0xef
      0006EA F7               [ 1] 1598 	ld	(x), a
      0006EB 20 2A            [ 2] 1599 	jra	00122$
      0006ED                       1600 00117$:
                                   1601 ;	libstm8s/src/stm8s_tim1.c: 1610: else if (TIM1_Channel == TIM1_CHANNEL_3)
      0006ED 7B 03            [ 1] 1602 	ld	a, (0x03, sp)
      0006EF A1 02            [ 1] 1603 	cp	a, #0x02
      0006F1 26 10            [ 1] 1604 	jrne	00114$
                                   1605 ;	libstm8s/src/stm8s_tim1.c: 1613: if (NewState != DISABLE)
      0006F3 0D 04            [ 1] 1606 	tnz	(0x04, sp)
      0006F5 27 06            [ 1] 1607 	jreq	00108$
                                   1608 ;	libstm8s/src/stm8s_tim1.c: 1615: TIM1->CCER2 |= TIM1_CCER2_CC3E;
      0006F7 72 10 52 5D      [ 1] 1609 	bset	0x525d, #0
      0006FB 20 1A            [ 2] 1610 	jra	00122$
      0006FD                       1611 00108$:
                                   1612 ;	libstm8s/src/stm8s_tim1.c: 1619: TIM1->CCER2 &= (uint8_t)(~TIM1_CCER2_CC3E);
      0006FD 72 11 52 5D      [ 1] 1613 	bres	0x525d, #0
      000701 20 14            [ 2] 1614 	jra	00122$
      000703                       1615 00114$:
                                   1616 ;	libstm8s/src/stm8s_tim1.c: 1625: if (NewState != DISABLE)
      000703 0D 04            [ 1] 1617 	tnz	(0x04, sp)
      000705 27 09            [ 1] 1618 	jreq	00111$
                                   1619 ;	libstm8s/src/stm8s_tim1.c: 1627: TIM1->CCER2 |= TIM1_CCER2_CC4E;
      000707 AE 52 5D         [ 2] 1620 	ldw	x, #0x525d
      00070A F6               [ 1] 1621 	ld	a, (x)
      00070B AA 10            [ 1] 1622 	or	a, #0x10
      00070D F7               [ 1] 1623 	ld	(x), a
      00070E 20 07            [ 2] 1624 	jra	00122$
      000710                       1625 00111$:
                                   1626 ;	libstm8s/src/stm8s_tim1.c: 1631: TIM1->CCER2 &= (uint8_t)(~TIM1_CCER2_CC4E);
      000710 AE 52 5D         [ 2] 1627 	ldw	x, #0x525d
      000713 F6               [ 1] 1628 	ld	a, (x)
      000714 A4 EF            [ 1] 1629 	and	a, #0xef
      000716 F7               [ 1] 1630 	ld	(x), a
      000717                       1631 00122$:
      000717 81               [ 4] 1632 	ret
                                   1633 ;	libstm8s/src/stm8s_tim1.c: 1647: void TIM1_CCxNCmd(TIM1_Channel_TypeDef TIM1_Channel, FunctionalState NewState)
                                   1634 ;	-----------------------------------------
                                   1635 ;	 function TIM1_CCxNCmd
                                   1636 ;	-----------------------------------------
      000718                       1637 _TIM1_CCxNCmd:
                                   1638 ;	libstm8s/src/stm8s_tim1.c: 1653: if (TIM1_Channel == TIM1_CHANNEL_1)
      000718 0D 03            [ 1] 1639 	tnz	(0x03, sp)
      00071A 26 16            [ 1] 1640 	jrne	00114$
                                   1641 ;	libstm8s/src/stm8s_tim1.c: 1656: if (NewState != DISABLE)
      00071C 0D 04            [ 1] 1642 	tnz	(0x04, sp)
      00071E 27 09            [ 1] 1643 	jreq	00102$
                                   1644 ;	libstm8s/src/stm8s_tim1.c: 1658: TIM1->CCER1 |= TIM1_CCER1_CC1NE;
      000720 AE 52 5C         [ 2] 1645 	ldw	x, #0x525c
      000723 F6               [ 1] 1646 	ld	a, (x)
      000724 AA 04            [ 1] 1647 	or	a, #0x04
      000726 F7               [ 1] 1648 	ld	(x), a
      000727 20 39            [ 2] 1649 	jra	00116$
      000729                       1650 00102$:
                                   1651 ;	libstm8s/src/stm8s_tim1.c: 1662: TIM1->CCER1 &= (uint8_t)(~TIM1_CCER1_CC1NE);
      000729 AE 52 5C         [ 2] 1652 	ldw	x, #0x525c
      00072C F6               [ 1] 1653 	ld	a, (x)
      00072D A4 FB            [ 1] 1654 	and	a, #0xfb
      00072F F7               [ 1] 1655 	ld	(x), a
      000730 20 30            [ 2] 1656 	jra	00116$
      000732                       1657 00114$:
                                   1658 ;	libstm8s/src/stm8s_tim1.c: 1665: else if (TIM1_Channel == TIM1_CHANNEL_2)
      000732 7B 03            [ 1] 1659 	ld	a, (0x03, sp)
      000734 A1 01            [ 1] 1660 	cp	a, #0x01
      000736 26 16            [ 1] 1661 	jrne	00111$
                                   1662 ;	libstm8s/src/stm8s_tim1.c: 1668: if (NewState != DISABLE)
      000738 0D 04            [ 1] 1663 	tnz	(0x04, sp)
      00073A 27 09            [ 1] 1664 	jreq	00105$
                                   1665 ;	libstm8s/src/stm8s_tim1.c: 1670: TIM1->CCER1 |= TIM1_CCER1_CC2NE;
      00073C AE 52 5C         [ 2] 1666 	ldw	x, #0x525c
      00073F F6               [ 1] 1667 	ld	a, (x)
      000740 AA 40            [ 1] 1668 	or	a, #0x40
      000742 F7               [ 1] 1669 	ld	(x), a
      000743 20 1D            [ 2] 1670 	jra	00116$
      000745                       1671 00105$:
                                   1672 ;	libstm8s/src/stm8s_tim1.c: 1674: TIM1->CCER1 &= (uint8_t)(~TIM1_CCER1_CC2NE);
      000745 AE 52 5C         [ 2] 1673 	ldw	x, #0x525c
      000748 F6               [ 1] 1674 	ld	a, (x)
      000749 A4 BF            [ 1] 1675 	and	a, #0xbf
      00074B F7               [ 1] 1676 	ld	(x), a
      00074C 20 14            [ 2] 1677 	jra	00116$
      00074E                       1678 00111$:
                                   1679 ;	libstm8s/src/stm8s_tim1.c: 1680: if (NewState != DISABLE)
      00074E 0D 04            [ 1] 1680 	tnz	(0x04, sp)
      000750 27 09            [ 1] 1681 	jreq	00108$
                                   1682 ;	libstm8s/src/stm8s_tim1.c: 1682: TIM1->CCER2 |= TIM1_CCER2_CC3NE;
      000752 AE 52 5D         [ 2] 1683 	ldw	x, #0x525d
      000755 F6               [ 1] 1684 	ld	a, (x)
      000756 AA 04            [ 1] 1685 	or	a, #0x04
      000758 F7               [ 1] 1686 	ld	(x), a
      000759 20 07            [ 2] 1687 	jra	00116$
      00075B                       1688 00108$:
                                   1689 ;	libstm8s/src/stm8s_tim1.c: 1686: TIM1->CCER2 &= (uint8_t)(~TIM1_CCER2_CC3NE);
      00075B AE 52 5D         [ 2] 1690 	ldw	x, #0x525d
      00075E F6               [ 1] 1691 	ld	a, (x)
      00075F A4 FB            [ 1] 1692 	and	a, #0xfb
      000761 F7               [ 1] 1693 	ld	(x), a
      000762                       1694 00116$:
      000762 81               [ 4] 1695 	ret
                                   1696 ;	libstm8s/src/stm8s_tim1.c: 1712: void TIM1_SelectOCxM(TIM1_Channel_TypeDef TIM1_Channel, TIM1_OCMode_TypeDef TIM1_OCMode)
                                   1697 ;	-----------------------------------------
                                   1698 ;	 function TIM1_SelectOCxM
                                   1699 ;	-----------------------------------------
      000763                       1700 _TIM1_SelectOCxM:
                                   1701 ;	libstm8s/src/stm8s_tim1.c: 1718: if (TIM1_Channel == TIM1_CHANNEL_1)
      000763 0D 03            [ 1] 1702 	tnz	(0x03, sp)
      000765 26 12            [ 1] 1703 	jrne	00108$
                                   1704 ;	libstm8s/src/stm8s_tim1.c: 1721: TIM1->CCER1 &= (uint8_t)(~TIM1_CCER1_CC1E);
      000767 72 11 52 5C      [ 1] 1705 	bres	0x525c, #0
                                   1706 ;	libstm8s/src/stm8s_tim1.c: 1724: TIM1->CCMR1 = (uint8_t)((uint8_t)(TIM1->CCMR1 & (uint8_t)(~TIM1_CCMR_OCM)) 
      00076B AE 52 58         [ 2] 1707 	ldw	x, #0x5258
      00076E F6               [ 1] 1708 	ld	a, (x)
      00076F A4 8F            [ 1] 1709 	and	a, #0x8f
                                   1710 ;	libstm8s/src/stm8s_tim1.c: 1725: | (uint8_t)TIM1_OCMode);
      000771 1A 04            [ 1] 1711 	or	a, (0x04, sp)
      000773 AE 52 58         [ 2] 1712 	ldw	x, #0x5258
      000776 F7               [ 1] 1713 	ld	(x), a
      000777 20 46            [ 2] 1714 	jra	00110$
      000779                       1715 00108$:
                                   1716 ;	libstm8s/src/stm8s_tim1.c: 1727: else if (TIM1_Channel == TIM1_CHANNEL_2)
      000779 7B 03            [ 1] 1717 	ld	a, (0x03, sp)
      00077B A1 01            [ 1] 1718 	cp	a, #0x01
      00077D 26 15            [ 1] 1719 	jrne	00105$
                                   1720 ;	libstm8s/src/stm8s_tim1.c: 1730: TIM1->CCER1 &= (uint8_t)(~TIM1_CCER1_CC2E);
      00077F AE 52 5C         [ 2] 1721 	ldw	x, #0x525c
      000782 F6               [ 1] 1722 	ld	a, (x)
      000783 A4 EF            [ 1] 1723 	and	a, #0xef
      000785 F7               [ 1] 1724 	ld	(x), a
                                   1725 ;	libstm8s/src/stm8s_tim1.c: 1733: TIM1->CCMR2 = (uint8_t)((uint8_t)(TIM1->CCMR2 & (uint8_t)(~TIM1_CCMR_OCM))
      000786 AE 52 59         [ 2] 1726 	ldw	x, #0x5259
      000789 F6               [ 1] 1727 	ld	a, (x)
      00078A A4 8F            [ 1] 1728 	and	a, #0x8f
                                   1729 ;	libstm8s/src/stm8s_tim1.c: 1734: | (uint8_t)TIM1_OCMode);
      00078C 1A 04            [ 1] 1730 	or	a, (0x04, sp)
      00078E AE 52 59         [ 2] 1731 	ldw	x, #0x5259
      000791 F7               [ 1] 1732 	ld	(x), a
      000792 20 2B            [ 2] 1733 	jra	00110$
      000794                       1734 00105$:
                                   1735 ;	libstm8s/src/stm8s_tim1.c: 1736: else if (TIM1_Channel == TIM1_CHANNEL_3)
      000794 7B 03            [ 1] 1736 	ld	a, (0x03, sp)
      000796 A1 02            [ 1] 1737 	cp	a, #0x02
      000798 26 12            [ 1] 1738 	jrne	00102$
                                   1739 ;	libstm8s/src/stm8s_tim1.c: 1739: TIM1->CCER2 &= (uint8_t)(~TIM1_CCER2_CC3E);
      00079A 72 11 52 5D      [ 1] 1740 	bres	0x525d, #0
                                   1741 ;	libstm8s/src/stm8s_tim1.c: 1742: TIM1->CCMR3 = (uint8_t)((uint8_t)(TIM1->CCMR3 & (uint8_t)(~TIM1_CCMR_OCM)) 
      00079E AE 52 5A         [ 2] 1742 	ldw	x, #0x525a
      0007A1 F6               [ 1] 1743 	ld	a, (x)
      0007A2 A4 8F            [ 1] 1744 	and	a, #0x8f
                                   1745 ;	libstm8s/src/stm8s_tim1.c: 1743: | (uint8_t)TIM1_OCMode);
      0007A4 1A 04            [ 1] 1746 	or	a, (0x04, sp)
      0007A6 AE 52 5A         [ 2] 1747 	ldw	x, #0x525a
      0007A9 F7               [ 1] 1748 	ld	(x), a
      0007AA 20 13            [ 2] 1749 	jra	00110$
      0007AC                       1750 00102$:
                                   1751 ;	libstm8s/src/stm8s_tim1.c: 1748: TIM1->CCER2 &= (uint8_t)(~TIM1_CCER2_CC4E);
      0007AC AE 52 5D         [ 2] 1752 	ldw	x, #0x525d
      0007AF F6               [ 1] 1753 	ld	a, (x)
      0007B0 A4 EF            [ 1] 1754 	and	a, #0xef
      0007B2 F7               [ 1] 1755 	ld	(x), a
                                   1756 ;	libstm8s/src/stm8s_tim1.c: 1751: TIM1->CCMR4 = (uint8_t)((uint8_t)(TIM1->CCMR4 & (uint8_t)(~TIM1_CCMR_OCM)) 
      0007B3 AE 52 5B         [ 2] 1757 	ldw	x, #0x525b
      0007B6 F6               [ 1] 1758 	ld	a, (x)
      0007B7 A4 8F            [ 1] 1759 	and	a, #0x8f
                                   1760 ;	libstm8s/src/stm8s_tim1.c: 1752: | (uint8_t)TIM1_OCMode);
      0007B9 1A 04            [ 1] 1761 	or	a, (0x04, sp)
      0007BB AE 52 5B         [ 2] 1762 	ldw	x, #0x525b
      0007BE F7               [ 1] 1763 	ld	(x), a
      0007BF                       1764 00110$:
      0007BF 81               [ 4] 1765 	ret
                                   1766 ;	libstm8s/src/stm8s_tim1.c: 1762: void TIM1_SetCounter(uint16_t Counter)
                                   1767 ;	-----------------------------------------
                                   1768 ;	 function TIM1_SetCounter
                                   1769 ;	-----------------------------------------
      0007C0                       1770 _TIM1_SetCounter:
      0007C0 89               [ 2] 1771 	pushw	x
                                   1772 ;	libstm8s/src/stm8s_tim1.c: 1765: TIM1->CNTRH = (uint8_t)(Counter >> 8);
      0007C1 7B 05            [ 1] 1773 	ld	a, (0x05, sp)
      0007C3 0F 01            [ 1] 1774 	clr	(0x01, sp)
      0007C5 AE 52 5E         [ 2] 1775 	ldw	x, #0x525e
      0007C8 F7               [ 1] 1776 	ld	(x), a
                                   1777 ;	libstm8s/src/stm8s_tim1.c: 1766: TIM1->CNTRL = (uint8_t)(Counter);
      0007C9 7B 06            [ 1] 1778 	ld	a, (0x06, sp)
      0007CB AE 52 5F         [ 2] 1779 	ldw	x, #0x525f
      0007CE F7               [ 1] 1780 	ld	(x), a
      0007CF 85               [ 2] 1781 	popw	x
      0007D0 81               [ 4] 1782 	ret
                                   1783 ;	libstm8s/src/stm8s_tim1.c: 1775: void TIM1_SetAutoreload(uint16_t Autoreload)
                                   1784 ;	-----------------------------------------
                                   1785 ;	 function TIM1_SetAutoreload
                                   1786 ;	-----------------------------------------
      0007D1                       1787 _TIM1_SetAutoreload:
      0007D1 89               [ 2] 1788 	pushw	x
                                   1789 ;	libstm8s/src/stm8s_tim1.c: 1778: TIM1->ARRH = (uint8_t)(Autoreload >> 8);
      0007D2 7B 05            [ 1] 1790 	ld	a, (0x05, sp)
      0007D4 0F 01            [ 1] 1791 	clr	(0x01, sp)
      0007D6 AE 52 62         [ 2] 1792 	ldw	x, #0x5262
      0007D9 F7               [ 1] 1793 	ld	(x), a
                                   1794 ;	libstm8s/src/stm8s_tim1.c: 1779: TIM1->ARRL = (uint8_t)(Autoreload);
      0007DA 7B 06            [ 1] 1795 	ld	a, (0x06, sp)
      0007DC AE 52 63         [ 2] 1796 	ldw	x, #0x5263
      0007DF F7               [ 1] 1797 	ld	(x), a
      0007E0 85               [ 2] 1798 	popw	x
      0007E1 81               [ 4] 1799 	ret
                                   1800 ;	libstm8s/src/stm8s_tim1.c: 1788: void TIM1_SetCompare1(uint16_t Compare1)
                                   1801 ;	-----------------------------------------
                                   1802 ;	 function TIM1_SetCompare1
                                   1803 ;	-----------------------------------------
      0007E2                       1804 _TIM1_SetCompare1:
      0007E2 89               [ 2] 1805 	pushw	x
                                   1806 ;	libstm8s/src/stm8s_tim1.c: 1791: TIM1->CCR1H = (uint8_t)(Compare1 >> 8);
      0007E3 7B 05            [ 1] 1807 	ld	a, (0x05, sp)
      0007E5 0F 01            [ 1] 1808 	clr	(0x01, sp)
      0007E7 AE 52 65         [ 2] 1809 	ldw	x, #0x5265
      0007EA F7               [ 1] 1810 	ld	(x), a
                                   1811 ;	libstm8s/src/stm8s_tim1.c: 1792: TIM1->CCR1L = (uint8_t)(Compare1);
      0007EB 7B 06            [ 1] 1812 	ld	a, (0x06, sp)
      0007ED AE 52 66         [ 2] 1813 	ldw	x, #0x5266
      0007F0 F7               [ 1] 1814 	ld	(x), a
      0007F1 85               [ 2] 1815 	popw	x
      0007F2 81               [ 4] 1816 	ret
                                   1817 ;	libstm8s/src/stm8s_tim1.c: 1801: void TIM1_SetCompare2(uint16_t Compare2)
                                   1818 ;	-----------------------------------------
                                   1819 ;	 function TIM1_SetCompare2
                                   1820 ;	-----------------------------------------
      0007F3                       1821 _TIM1_SetCompare2:
      0007F3 89               [ 2] 1822 	pushw	x
                                   1823 ;	libstm8s/src/stm8s_tim1.c: 1804: TIM1->CCR2H = (uint8_t)(Compare2 >> 8);
      0007F4 7B 05            [ 1] 1824 	ld	a, (0x05, sp)
      0007F6 0F 01            [ 1] 1825 	clr	(0x01, sp)
      0007F8 AE 52 67         [ 2] 1826 	ldw	x, #0x5267
      0007FB F7               [ 1] 1827 	ld	(x), a
                                   1828 ;	libstm8s/src/stm8s_tim1.c: 1805: TIM1->CCR2L = (uint8_t)(Compare2);
      0007FC 7B 06            [ 1] 1829 	ld	a, (0x06, sp)
      0007FE AE 52 68         [ 2] 1830 	ldw	x, #0x5268
      000801 F7               [ 1] 1831 	ld	(x), a
      000802 85               [ 2] 1832 	popw	x
      000803 81               [ 4] 1833 	ret
                                   1834 ;	libstm8s/src/stm8s_tim1.c: 1814: void TIM1_SetCompare3(uint16_t Compare3)
                                   1835 ;	-----------------------------------------
                                   1836 ;	 function TIM1_SetCompare3
                                   1837 ;	-----------------------------------------
      000804                       1838 _TIM1_SetCompare3:
      000804 89               [ 2] 1839 	pushw	x
                                   1840 ;	libstm8s/src/stm8s_tim1.c: 1817: TIM1->CCR3H = (uint8_t)(Compare3 >> 8);
      000805 7B 05            [ 1] 1841 	ld	a, (0x05, sp)
      000807 0F 01            [ 1] 1842 	clr	(0x01, sp)
      000809 AE 52 69         [ 2] 1843 	ldw	x, #0x5269
      00080C F7               [ 1] 1844 	ld	(x), a
                                   1845 ;	libstm8s/src/stm8s_tim1.c: 1818: TIM1->CCR3L = (uint8_t)(Compare3);
      00080D 7B 06            [ 1] 1846 	ld	a, (0x06, sp)
      00080F AE 52 6A         [ 2] 1847 	ldw	x, #0x526a
      000812 F7               [ 1] 1848 	ld	(x), a
      000813 85               [ 2] 1849 	popw	x
      000814 81               [ 4] 1850 	ret
                                   1851 ;	libstm8s/src/stm8s_tim1.c: 1827: void TIM1_SetCompare4(uint16_t Compare4)
                                   1852 ;	-----------------------------------------
                                   1853 ;	 function TIM1_SetCompare4
                                   1854 ;	-----------------------------------------
      000815                       1855 _TIM1_SetCompare4:
      000815 89               [ 2] 1856 	pushw	x
                                   1857 ;	libstm8s/src/stm8s_tim1.c: 1830: TIM1->CCR4H = (uint8_t)(Compare4 >> 8);
      000816 7B 05            [ 1] 1858 	ld	a, (0x05, sp)
      000818 0F 01            [ 1] 1859 	clr	(0x01, sp)
      00081A AE 52 6B         [ 2] 1860 	ldw	x, #0x526b
      00081D F7               [ 1] 1861 	ld	(x), a
                                   1862 ;	libstm8s/src/stm8s_tim1.c: 1831: TIM1->CCR4L = (uint8_t)(Compare4);
      00081E 7B 06            [ 1] 1863 	ld	a, (0x06, sp)
      000820 AE 52 6C         [ 2] 1864 	ldw	x, #0x526c
      000823 F7               [ 1] 1865 	ld	(x), a
      000824 85               [ 2] 1866 	popw	x
      000825 81               [ 4] 1867 	ret
                                   1868 ;	libstm8s/src/stm8s_tim1.c: 1844: void TIM1_SetIC1Prescaler(TIM1_ICPSC_TypeDef TIM1_IC1Prescaler)
                                   1869 ;	-----------------------------------------
                                   1870 ;	 function TIM1_SetIC1Prescaler
                                   1871 ;	-----------------------------------------
      000826                       1872 _TIM1_SetIC1Prescaler:
                                   1873 ;	libstm8s/src/stm8s_tim1.c: 1850: TIM1->CCMR1 = (uint8_t)((uint8_t)(TIM1->CCMR1 & (uint8_t)(~TIM1_CCMR_ICxPSC)) 
      000826 AE 52 58         [ 2] 1874 	ldw	x, #0x5258
      000829 F6               [ 1] 1875 	ld	a, (x)
      00082A A4 F3            [ 1] 1876 	and	a, #0xf3
                                   1877 ;	libstm8s/src/stm8s_tim1.c: 1851: | (uint8_t)TIM1_IC1Prescaler);
      00082C 1A 03            [ 1] 1878 	or	a, (0x03, sp)
      00082E AE 52 58         [ 2] 1879 	ldw	x, #0x5258
      000831 F7               [ 1] 1880 	ld	(x), a
      000832 81               [ 4] 1881 	ret
                                   1882 ;	libstm8s/src/stm8s_tim1.c: 1864: void TIM1_SetIC2Prescaler(TIM1_ICPSC_TypeDef TIM1_IC2Prescaler)
                                   1883 ;	-----------------------------------------
                                   1884 ;	 function TIM1_SetIC2Prescaler
                                   1885 ;	-----------------------------------------
      000833                       1886 _TIM1_SetIC2Prescaler:
                                   1887 ;	libstm8s/src/stm8s_tim1.c: 1871: TIM1->CCMR2 = (uint8_t)((uint8_t)(TIM1->CCMR2 & (uint8_t)(~TIM1_CCMR_ICxPSC))
      000833 AE 52 59         [ 2] 1888 	ldw	x, #0x5259
      000836 F6               [ 1] 1889 	ld	a, (x)
      000837 A4 F3            [ 1] 1890 	and	a, #0xf3
                                   1891 ;	libstm8s/src/stm8s_tim1.c: 1872: | (uint8_t)TIM1_IC2Prescaler);
      000839 1A 03            [ 1] 1892 	or	a, (0x03, sp)
      00083B AE 52 59         [ 2] 1893 	ldw	x, #0x5259
      00083E F7               [ 1] 1894 	ld	(x), a
      00083F 81               [ 4] 1895 	ret
                                   1896 ;	libstm8s/src/stm8s_tim1.c: 1885: void TIM1_SetIC3Prescaler(TIM1_ICPSC_TypeDef TIM1_IC3Prescaler)
                                   1897 ;	-----------------------------------------
                                   1898 ;	 function TIM1_SetIC3Prescaler
                                   1899 ;	-----------------------------------------
      000840                       1900 _TIM1_SetIC3Prescaler:
                                   1901 ;	libstm8s/src/stm8s_tim1.c: 1892: TIM1->CCMR3 = (uint8_t)((uint8_t)(TIM1->CCMR3 & (uint8_t)(~TIM1_CCMR_ICxPSC)) | 
      000840 AE 52 5A         [ 2] 1902 	ldw	x, #0x525a
      000843 F6               [ 1] 1903 	ld	a, (x)
      000844 A4 F3            [ 1] 1904 	and	a, #0xf3
                                   1905 ;	libstm8s/src/stm8s_tim1.c: 1893: (uint8_t)TIM1_IC3Prescaler);
      000846 1A 03            [ 1] 1906 	or	a, (0x03, sp)
      000848 AE 52 5A         [ 2] 1907 	ldw	x, #0x525a
      00084B F7               [ 1] 1908 	ld	(x), a
      00084C 81               [ 4] 1909 	ret
                                   1910 ;	libstm8s/src/stm8s_tim1.c: 1906: void TIM1_SetIC4Prescaler(TIM1_ICPSC_TypeDef TIM1_IC4Prescaler)
                                   1911 ;	-----------------------------------------
                                   1912 ;	 function TIM1_SetIC4Prescaler
                                   1913 ;	-----------------------------------------
      00084D                       1914 _TIM1_SetIC4Prescaler:
                                   1915 ;	libstm8s/src/stm8s_tim1.c: 1913: TIM1->CCMR4 = (uint8_t)((uint8_t)(TIM1->CCMR4 & (uint8_t)(~TIM1_CCMR_ICxPSC)) |
      00084D AE 52 5B         [ 2] 1916 	ldw	x, #0x525b
      000850 F6               [ 1] 1917 	ld	a, (x)
      000851 A4 F3            [ 1] 1918 	and	a, #0xf3
                                   1919 ;	libstm8s/src/stm8s_tim1.c: 1914: (uint8_t)TIM1_IC4Prescaler);
      000853 1A 03            [ 1] 1920 	or	a, (0x03, sp)
      000855 AE 52 5B         [ 2] 1921 	ldw	x, #0x525b
      000858 F7               [ 1] 1922 	ld	(x), a
      000859 81               [ 4] 1923 	ret
                                   1924 ;	libstm8s/src/stm8s_tim1.c: 1922: uint16_t TIM1_GetCapture1(void)
                                   1925 ;	-----------------------------------------
                                   1926 ;	 function TIM1_GetCapture1
                                   1927 ;	-----------------------------------------
      00085A                       1928 _TIM1_GetCapture1:
      00085A 89               [ 2] 1929 	pushw	x
                                   1930 ;	libstm8s/src/stm8s_tim1.c: 1929: tmpccr1h = TIM1->CCR1H;
      00085B AE 52 65         [ 2] 1931 	ldw	x, #0x5265
      00085E F6               [ 1] 1932 	ld	a, (x)
      00085F 90 95            [ 1] 1933 	ld	yh, a
                                   1934 ;	libstm8s/src/stm8s_tim1.c: 1930: tmpccr1l = TIM1->CCR1L;
      000861 AE 52 66         [ 2] 1935 	ldw	x, #0x5266
      000864 F6               [ 1] 1936 	ld	a, (x)
                                   1937 ;	libstm8s/src/stm8s_tim1.c: 1932: tmpccr1 = (uint16_t)(tmpccr1l);
      000865 5F               [ 1] 1938 	clrw	x
      000866 97               [ 1] 1939 	ld	xl, a
      000867 1F 01            [ 2] 1940 	ldw	(0x01, sp), x
                                   1941 ;	libstm8s/src/stm8s_tim1.c: 1933: tmpccr1 |= (uint16_t)((uint16_t)tmpccr1h << 8);
      000869 4F               [ 1] 1942 	clr	a
      00086A 4F               [ 1] 1943 	clr	a
      00086B 1A 02            [ 1] 1944 	or	a, (0x02, sp)
      00086D 97               [ 1] 1945 	ld	xl, a
      00086E 90 9E            [ 1] 1946 	ld	a, yh
      000870 1A 01            [ 1] 1947 	or	a, (0x01, sp)
      000872 95               [ 1] 1948 	ld	xh, a
                                   1949 ;	libstm8s/src/stm8s_tim1.c: 1935: return (uint16_t)tmpccr1;
      000873 5B 02            [ 2] 1950 	addw	sp, #2
      000875 81               [ 4] 1951 	ret
                                   1952 ;	libstm8s/src/stm8s_tim1.c: 1943: uint16_t TIM1_GetCapture2(void)
                                   1953 ;	-----------------------------------------
                                   1954 ;	 function TIM1_GetCapture2
                                   1955 ;	-----------------------------------------
      000876                       1956 _TIM1_GetCapture2:
      000876 89               [ 2] 1957 	pushw	x
                                   1958 ;	libstm8s/src/stm8s_tim1.c: 1950: tmpccr2h = TIM1->CCR2H;
      000877 AE 52 67         [ 2] 1959 	ldw	x, #0x5267
      00087A F6               [ 1] 1960 	ld	a, (x)
      00087B 90 95            [ 1] 1961 	ld	yh, a
                                   1962 ;	libstm8s/src/stm8s_tim1.c: 1951: tmpccr2l = TIM1->CCR2L;
      00087D AE 52 68         [ 2] 1963 	ldw	x, #0x5268
      000880 F6               [ 1] 1964 	ld	a, (x)
                                   1965 ;	libstm8s/src/stm8s_tim1.c: 1953: tmpccr2 = (uint16_t)(tmpccr2l);
      000881 5F               [ 1] 1966 	clrw	x
      000882 97               [ 1] 1967 	ld	xl, a
      000883 1F 01            [ 2] 1968 	ldw	(0x01, sp), x
                                   1969 ;	libstm8s/src/stm8s_tim1.c: 1954: tmpccr2 |= (uint16_t)((uint16_t)tmpccr2h << 8);
      000885 4F               [ 1] 1970 	clr	a
      000886 4F               [ 1] 1971 	clr	a
      000887 1A 02            [ 1] 1972 	or	a, (0x02, sp)
      000889 97               [ 1] 1973 	ld	xl, a
      00088A 90 9E            [ 1] 1974 	ld	a, yh
      00088C 1A 01            [ 1] 1975 	or	a, (0x01, sp)
      00088E 95               [ 1] 1976 	ld	xh, a
                                   1977 ;	libstm8s/src/stm8s_tim1.c: 1956: return (uint16_t)tmpccr2;
      00088F 5B 02            [ 2] 1978 	addw	sp, #2
      000891 81               [ 4] 1979 	ret
                                   1980 ;	libstm8s/src/stm8s_tim1.c: 1964: uint16_t TIM1_GetCapture3(void)
                                   1981 ;	-----------------------------------------
                                   1982 ;	 function TIM1_GetCapture3
                                   1983 ;	-----------------------------------------
      000892                       1984 _TIM1_GetCapture3:
      000892 89               [ 2] 1985 	pushw	x
                                   1986 ;	libstm8s/src/stm8s_tim1.c: 1970: tmpccr3h = TIM1->CCR3H;
      000893 AE 52 69         [ 2] 1987 	ldw	x, #0x5269
      000896 F6               [ 1] 1988 	ld	a, (x)
      000897 90 95            [ 1] 1989 	ld	yh, a
                                   1990 ;	libstm8s/src/stm8s_tim1.c: 1971: tmpccr3l = TIM1->CCR3L;
      000899 AE 52 6A         [ 2] 1991 	ldw	x, #0x526a
      00089C F6               [ 1] 1992 	ld	a, (x)
                                   1993 ;	libstm8s/src/stm8s_tim1.c: 1973: tmpccr3 = (uint16_t)(tmpccr3l);
      00089D 5F               [ 1] 1994 	clrw	x
      00089E 97               [ 1] 1995 	ld	xl, a
      00089F 1F 01            [ 2] 1996 	ldw	(0x01, sp), x
                                   1997 ;	libstm8s/src/stm8s_tim1.c: 1974: tmpccr3 |= (uint16_t)((uint16_t)tmpccr3h << 8);
      0008A1 4F               [ 1] 1998 	clr	a
      0008A2 4F               [ 1] 1999 	clr	a
      0008A3 1A 02            [ 1] 2000 	or	a, (0x02, sp)
      0008A5 97               [ 1] 2001 	ld	xl, a
      0008A6 90 9E            [ 1] 2002 	ld	a, yh
      0008A8 1A 01            [ 1] 2003 	or	a, (0x01, sp)
      0008AA 95               [ 1] 2004 	ld	xh, a
                                   2005 ;	libstm8s/src/stm8s_tim1.c: 1976: return (uint16_t)tmpccr3;
      0008AB 5B 02            [ 2] 2006 	addw	sp, #2
      0008AD 81               [ 4] 2007 	ret
                                   2008 ;	libstm8s/src/stm8s_tim1.c: 1984: uint16_t TIM1_GetCapture4(void)
                                   2009 ;	-----------------------------------------
                                   2010 ;	 function TIM1_GetCapture4
                                   2011 ;	-----------------------------------------
      0008AE                       2012 _TIM1_GetCapture4:
      0008AE 89               [ 2] 2013 	pushw	x
                                   2014 ;	libstm8s/src/stm8s_tim1.c: 1990: tmpccr4h = TIM1->CCR4H;
      0008AF AE 52 6B         [ 2] 2015 	ldw	x, #0x526b
      0008B2 F6               [ 1] 2016 	ld	a, (x)
      0008B3 90 95            [ 1] 2017 	ld	yh, a
                                   2018 ;	libstm8s/src/stm8s_tim1.c: 1991: tmpccr4l = TIM1->CCR4L;
      0008B5 AE 52 6C         [ 2] 2019 	ldw	x, #0x526c
      0008B8 F6               [ 1] 2020 	ld	a, (x)
                                   2021 ;	libstm8s/src/stm8s_tim1.c: 1993: tmpccr4 = (uint16_t)(tmpccr4l);
      0008B9 5F               [ 1] 2022 	clrw	x
      0008BA 97               [ 1] 2023 	ld	xl, a
      0008BB 1F 01            [ 2] 2024 	ldw	(0x01, sp), x
                                   2025 ;	libstm8s/src/stm8s_tim1.c: 1994: tmpccr4 |= (uint16_t)((uint16_t)tmpccr4h << 8);
      0008BD 4F               [ 1] 2026 	clr	a
      0008BE 4F               [ 1] 2027 	clr	a
      0008BF 1A 02            [ 1] 2028 	or	a, (0x02, sp)
      0008C1 97               [ 1] 2029 	ld	xl, a
      0008C2 90 9E            [ 1] 2030 	ld	a, yh
      0008C4 1A 01            [ 1] 2031 	or	a, (0x01, sp)
      0008C6 95               [ 1] 2032 	ld	xh, a
                                   2033 ;	libstm8s/src/stm8s_tim1.c: 1996: return (uint16_t)tmpccr4;
      0008C7 5B 02            [ 2] 2034 	addw	sp, #2
      0008C9 81               [ 4] 2035 	ret
                                   2036 ;	libstm8s/src/stm8s_tim1.c: 2004: uint16_t TIM1_GetCounter(void)
                                   2037 ;	-----------------------------------------
                                   2038 ;	 function TIM1_GetCounter
                                   2039 ;	-----------------------------------------
      0008CA                       2040 _TIM1_GetCounter:
      0008CA 89               [ 2] 2041 	pushw	x
                                   2042 ;	libstm8s/src/stm8s_tim1.c: 2008: tmpcntr = ((uint16_t)TIM1->CNTRH << 8);
      0008CB AE 52 5E         [ 2] 2043 	ldw	x, #0x525e
      0008CE F6               [ 1] 2044 	ld	a, (x)
      0008CF 95               [ 1] 2045 	ld	xh, a
      0008D0 4F               [ 1] 2046 	clr	a
      0008D1 4F               [ 1] 2047 	clr	a
      0008D2 97               [ 1] 2048 	ld	xl, a
      0008D3 1F 01            [ 2] 2049 	ldw	(0x01, sp), x
                                   2050 ;	libstm8s/src/stm8s_tim1.c: 2011: return (uint16_t)(tmpcntr | (uint16_t)(TIM1->CNTRL));
      0008D5 AE 52 5F         [ 2] 2051 	ldw	x, #0x525f
      0008D8 F6               [ 1] 2052 	ld	a, (x)
      0008D9 5F               [ 1] 2053 	clrw	x
      0008DA 97               [ 1] 2054 	ld	xl, a
      0008DB 1A 02            [ 1] 2055 	or	a, (0x02, sp)
      0008DD 02               [ 1] 2056 	rlwa	x
      0008DE 1A 01            [ 1] 2057 	or	a, (0x01, sp)
      0008E0 95               [ 1] 2058 	ld	xh, a
      0008E1 5B 02            [ 2] 2059 	addw	sp, #2
      0008E3 81               [ 4] 2060 	ret
                                   2061 ;	libstm8s/src/stm8s_tim1.c: 2019: uint16_t TIM1_GetPrescaler(void)
                                   2062 ;	-----------------------------------------
                                   2063 ;	 function TIM1_GetPrescaler
                                   2064 ;	-----------------------------------------
      0008E4                       2065 _TIM1_GetPrescaler:
      0008E4 89               [ 2] 2066 	pushw	x
                                   2067 ;	libstm8s/src/stm8s_tim1.c: 2023: temp = ((uint16_t)TIM1->PSCRH << 8);
      0008E5 AE 52 60         [ 2] 2068 	ldw	x, #0x5260
      0008E8 F6               [ 1] 2069 	ld	a, (x)
      0008E9 95               [ 1] 2070 	ld	xh, a
      0008EA 4F               [ 1] 2071 	clr	a
      0008EB 4F               [ 1] 2072 	clr	a
      0008EC 97               [ 1] 2073 	ld	xl, a
      0008ED 1F 01            [ 2] 2074 	ldw	(0x01, sp), x
                                   2075 ;	libstm8s/src/stm8s_tim1.c: 2026: return (uint16_t)( temp | (uint16_t)(TIM1->PSCRL));
      0008EF AE 52 61         [ 2] 2076 	ldw	x, #0x5261
      0008F2 F6               [ 1] 2077 	ld	a, (x)
      0008F3 5F               [ 1] 2078 	clrw	x
      0008F4 97               [ 1] 2079 	ld	xl, a
      0008F5 1A 02            [ 1] 2080 	or	a, (0x02, sp)
      0008F7 02               [ 1] 2081 	rlwa	x
      0008F8 1A 01            [ 1] 2082 	or	a, (0x01, sp)
      0008FA 95               [ 1] 2083 	ld	xh, a
      0008FB 5B 02            [ 2] 2084 	addw	sp, #2
      0008FD 81               [ 4] 2085 	ret
                                   2086 ;	libstm8s/src/stm8s_tim1.c: 2047: FlagStatus TIM1_GetFlagStatus(TIM1_FLAG_TypeDef TIM1_FLAG)
                                   2087 ;	-----------------------------------------
                                   2088 ;	 function TIM1_GetFlagStatus
                                   2089 ;	-----------------------------------------
      0008FE                       2090 _TIM1_GetFlagStatus:
      0008FE 52 05            [ 2] 2091 	sub	sp, #5
                                   2092 ;	libstm8s/src/stm8s_tim1.c: 2055: tim1_flag_l = (uint8_t)(TIM1->SR1 & (uint8_t)TIM1_FLAG);
      000900 AE 52 55         [ 2] 2093 	ldw	x, #0x5255
      000903 F6               [ 1] 2094 	ld	a, (x)
      000904 6B 03            [ 1] 2095 	ld	(0x03, sp), a
      000906 7B 09            [ 1] 2096 	ld	a, (0x09, sp)
      000908 14 03            [ 1] 2097 	and	a, (0x03, sp)
      00090A 6B 02            [ 1] 2098 	ld	(0x02, sp), a
                                   2099 ;	libstm8s/src/stm8s_tim1.c: 2056: tim1_flag_h = (uint8_t)((uint16_t)TIM1_FLAG >> 8);
      00090C 7B 08            [ 1] 2100 	ld	a, (0x08, sp)
      00090E 0F 04            [ 1] 2101 	clr	(0x04, sp)
      000910 6B 01            [ 1] 2102 	ld	(0x01, sp), a
                                   2103 ;	libstm8s/src/stm8s_tim1.c: 2058: if ((tim1_flag_l | (uint8_t)(TIM1->SR2 & tim1_flag_h)) != 0)
      000912 AE 52 56         [ 2] 2104 	ldw	x, #0x5256
      000915 F6               [ 1] 2105 	ld	a, (x)
      000916 14 01            [ 1] 2106 	and	a, (0x01, sp)
      000918 1A 02            [ 1] 2107 	or	a, (0x02, sp)
      00091A 4D               [ 1] 2108 	tnz	a
      00091B 27 03            [ 1] 2109 	jreq	00102$
                                   2110 ;	libstm8s/src/stm8s_tim1.c: 2060: bitstatus = SET;
      00091D A6 01            [ 1] 2111 	ld	a, #0x01
                                   2112 ;	libstm8s/src/stm8s_tim1.c: 2064: bitstatus = RESET;
      00091F 21                    2113 	.byte 0x21
      000920                       2114 00102$:
      000920 4F               [ 1] 2115 	clr	a
      000921                       2116 00103$:
                                   2117 ;	libstm8s/src/stm8s_tim1.c: 2066: return (FlagStatus)(bitstatus);
      000921 5B 05            [ 2] 2118 	addw	sp, #5
      000923 81               [ 4] 2119 	ret
                                   2120 ;	libstm8s/src/stm8s_tim1.c: 2087: void TIM1_ClearFlag(TIM1_FLAG_TypeDef TIM1_FLAG)
                                   2121 ;	-----------------------------------------
                                   2122 ;	 function TIM1_ClearFlag
                                   2123 ;	-----------------------------------------
      000924                       2124 _TIM1_ClearFlag:
      000924 89               [ 2] 2125 	pushw	x
                                   2126 ;	libstm8s/src/stm8s_tim1.c: 2093: TIM1->SR1 = (uint8_t)(~(uint8_t)(TIM1_FLAG));
      000925 7B 06            [ 1] 2127 	ld	a, (0x06, sp)
      000927 43               [ 1] 2128 	cpl	a
      000928 AE 52 55         [ 2] 2129 	ldw	x, #0x5255
      00092B F7               [ 1] 2130 	ld	(x), a
                                   2131 ;	libstm8s/src/stm8s_tim1.c: 2094: TIM1->SR2 = (uint8_t)((uint8_t)(~((uint8_t)((uint16_t)TIM1_FLAG >> 8))) & 
      00092C 7B 05            [ 1] 2132 	ld	a, (0x05, sp)
      00092E 0F 01            [ 1] 2133 	clr	(0x01, sp)
      000930 43               [ 1] 2134 	cpl	a
      000931 A4 1E            [ 1] 2135 	and	a, #0x1e
      000933 AE 52 56         [ 2] 2136 	ldw	x, #0x5256
      000936 F7               [ 1] 2137 	ld	(x), a
      000937 85               [ 2] 2138 	popw	x
      000938 81               [ 4] 2139 	ret
                                   2140 ;	libstm8s/src/stm8s_tim1.c: 2112: ITStatus TIM1_GetITStatus(TIM1_IT_TypeDef TIM1_IT)
                                   2141 ;	-----------------------------------------
                                   2142 ;	 function TIM1_GetITStatus
                                   2143 ;	-----------------------------------------
      000939                       2144 _TIM1_GetITStatus:
      000939 88               [ 1] 2145 	push	a
                                   2146 ;	libstm8s/src/stm8s_tim1.c: 2120: TIM1_itStatus = (uint8_t)(TIM1->SR1 & (uint8_t)TIM1_IT);
      00093A AE 52 55         [ 2] 2147 	ldw	x, #0x5255
      00093D F6               [ 1] 2148 	ld	a, (x)
      00093E 14 04            [ 1] 2149 	and	a, (0x04, sp)
      000940 6B 01            [ 1] 2150 	ld	(0x01, sp), a
                                   2151 ;	libstm8s/src/stm8s_tim1.c: 2122: TIM1_itEnable = (uint8_t)(TIM1->IER & (uint8_t)TIM1_IT);
      000942 AE 52 54         [ 2] 2152 	ldw	x, #0x5254
      000945 F6               [ 1] 2153 	ld	a, (x)
      000946 14 04            [ 1] 2154 	and	a, (0x04, sp)
                                   2155 ;	libstm8s/src/stm8s_tim1.c: 2124: if ((TIM1_itStatus != (uint8_t)RESET ) && (TIM1_itEnable != (uint8_t)RESET ))
      000948 0D 01            [ 1] 2156 	tnz	(0x01, sp)
      00094A 27 06            [ 1] 2157 	jreq	00102$
      00094C 4D               [ 1] 2158 	tnz	a
      00094D 27 03            [ 1] 2159 	jreq	00102$
                                   2160 ;	libstm8s/src/stm8s_tim1.c: 2126: bitstatus = SET;
      00094F A6 01            [ 1] 2161 	ld	a, #0x01
                                   2162 ;	libstm8s/src/stm8s_tim1.c: 2130: bitstatus = RESET;
      000951 21                    2163 	.byte 0x21
      000952                       2164 00102$:
      000952 4F               [ 1] 2165 	clr	a
      000953                       2166 00103$:
                                   2167 ;	libstm8s/src/stm8s_tim1.c: 2132: return (ITStatus)(bitstatus);
      000953 5B 01            [ 2] 2168 	addw	sp, #1
      000955 81               [ 4] 2169 	ret
                                   2170 ;	libstm8s/src/stm8s_tim1.c: 2149: void TIM1_ClearITPendingBit(TIM1_IT_TypeDef TIM1_IT)
                                   2171 ;	-----------------------------------------
                                   2172 ;	 function TIM1_ClearITPendingBit
                                   2173 ;	-----------------------------------------
      000956                       2174 _TIM1_ClearITPendingBit:
                                   2175 ;	libstm8s/src/stm8s_tim1.c: 2155: TIM1->SR1 = (uint8_t)(~(uint8_t)TIM1_IT);
      000956 7B 03            [ 1] 2176 	ld	a, (0x03, sp)
      000958 43               [ 1] 2177 	cpl	a
      000959 AE 52 55         [ 2] 2178 	ldw	x, #0x5255
      00095C F7               [ 1] 2179 	ld	(x), a
      00095D 81               [ 4] 2180 	ret
                                   2181 ;	libstm8s/src/stm8s_tim1.c: 2174: static void TI1_Config(uint8_t TIM1_ICPolarity,
                                   2182 ;	-----------------------------------------
                                   2183 ;	 function TI1_Config
                                   2184 ;	-----------------------------------------
      00095E                       2185 _TI1_Config:
      00095E 88               [ 1] 2186 	push	a
                                   2187 ;	libstm8s/src/stm8s_tim1.c: 2179: TIM1->CCER1 &= (uint8_t)(~TIM1_CCER1_CC1E);
      00095F 72 11 52 5C      [ 1] 2188 	bres	0x525c, #0
                                   2189 ;	libstm8s/src/stm8s_tim1.c: 2182: TIM1->CCMR1 = (uint8_t)((uint8_t)(TIM1->CCMR1 & (uint8_t)(~(uint8_t)( TIM1_CCMR_CCxS | TIM1_CCMR_ICxF ))) | 
      000963 AE 52 58         [ 2] 2190 	ldw	x, #0x5258
      000966 F6               [ 1] 2191 	ld	a, (x)
      000967 A4 0C            [ 1] 2192 	and	a, #0x0c
      000969 6B 01            [ 1] 2193 	ld	(0x01, sp), a
                                   2194 ;	libstm8s/src/stm8s_tim1.c: 2183: (uint8_t)(( (TIM1_ICSelection)) | ((uint8_t)( TIM1_ICFilter << 4))));
      00096B 7B 06            [ 1] 2195 	ld	a, (0x06, sp)
      00096D 4E               [ 1] 2196 	swap	a
      00096E A4 F0            [ 1] 2197 	and	a, #0xf0
      000970 1A 05            [ 1] 2198 	or	a, (0x05, sp)
      000972 1A 01            [ 1] 2199 	or	a, (0x01, sp)
      000974 AE 52 58         [ 2] 2200 	ldw	x, #0x5258
      000977 F7               [ 1] 2201 	ld	(x), a
                                   2202 ;	libstm8s/src/stm8s_tim1.c: 2186: if (TIM1_ICPolarity != TIM1_ICPOLARITY_RISING)
      000978 0D 04            [ 1] 2203 	tnz	(0x04, sp)
      00097A 27 09            [ 1] 2204 	jreq	00102$
                                   2205 ;	libstm8s/src/stm8s_tim1.c: 2188: TIM1->CCER1 |= TIM1_CCER1_CC1P;
      00097C AE 52 5C         [ 2] 2206 	ldw	x, #0x525c
      00097F F6               [ 1] 2207 	ld	a, (x)
      000980 AA 02            [ 1] 2208 	or	a, #0x02
      000982 F7               [ 1] 2209 	ld	(x), a
      000983 20 07            [ 2] 2210 	jra	00103$
      000985                       2211 00102$:
                                   2212 ;	libstm8s/src/stm8s_tim1.c: 2192: TIM1->CCER1 &= (uint8_t)(~TIM1_CCER1_CC1P);
      000985 AE 52 5C         [ 2] 2213 	ldw	x, #0x525c
      000988 F6               [ 1] 2214 	ld	a, (x)
      000989 A4 FD            [ 1] 2215 	and	a, #0xfd
      00098B F7               [ 1] 2216 	ld	(x), a
      00098C                       2217 00103$:
                                   2218 ;	libstm8s/src/stm8s_tim1.c: 2196: TIM1->CCER1 |=  TIM1_CCER1_CC1E;
      00098C 72 10 52 5C      [ 1] 2219 	bset	0x525c, #0
      000990 84               [ 1] 2220 	pop	a
      000991 81               [ 4] 2221 	ret
                                   2222 ;	libstm8s/src/stm8s_tim1.c: 2215: static void TI2_Config(uint8_t TIM1_ICPolarity,
                                   2223 ;	-----------------------------------------
                                   2224 ;	 function TI2_Config
                                   2225 ;	-----------------------------------------
      000992                       2226 _TI2_Config:
      000992 88               [ 1] 2227 	push	a
                                   2228 ;	libstm8s/src/stm8s_tim1.c: 2220: TIM1->CCER1 &=  (uint8_t)(~TIM1_CCER1_CC2E);
      000993 AE 52 5C         [ 2] 2229 	ldw	x, #0x525c
      000996 F6               [ 1] 2230 	ld	a, (x)
      000997 A4 EF            [ 1] 2231 	and	a, #0xef
      000999 F7               [ 1] 2232 	ld	(x), a
                                   2233 ;	libstm8s/src/stm8s_tim1.c: 2223: TIM1->CCMR2  = (uint8_t)((uint8_t)(TIM1->CCMR2 & (uint8_t)(~(uint8_t)( TIM1_CCMR_CCxS | TIM1_CCMR_ICxF ))) 
      00099A AE 52 59         [ 2] 2234 	ldw	x, #0x5259
      00099D F6               [ 1] 2235 	ld	a, (x)
      00099E A4 0C            [ 1] 2236 	and	a, #0x0c
      0009A0 6B 01            [ 1] 2237 	ld	(0x01, sp), a
                                   2238 ;	libstm8s/src/stm8s_tim1.c: 2224: | (uint8_t)(( (TIM1_ICSelection)) | ((uint8_t)( TIM1_ICFilter << 4))));
      0009A2 7B 06            [ 1] 2239 	ld	a, (0x06, sp)
      0009A4 4E               [ 1] 2240 	swap	a
      0009A5 A4 F0            [ 1] 2241 	and	a, #0xf0
      0009A7 1A 05            [ 1] 2242 	or	a, (0x05, sp)
      0009A9 1A 01            [ 1] 2243 	or	a, (0x01, sp)
      0009AB AE 52 59         [ 2] 2244 	ldw	x, #0x5259
      0009AE F7               [ 1] 2245 	ld	(x), a
                                   2246 ;	libstm8s/src/stm8s_tim1.c: 2226: if (TIM1_ICPolarity != TIM1_ICPOLARITY_RISING)
      0009AF 0D 04            [ 1] 2247 	tnz	(0x04, sp)
      0009B1 27 09            [ 1] 2248 	jreq	00102$
                                   2249 ;	libstm8s/src/stm8s_tim1.c: 2228: TIM1->CCER1 |= TIM1_CCER1_CC2P;
      0009B3 AE 52 5C         [ 2] 2250 	ldw	x, #0x525c
      0009B6 F6               [ 1] 2251 	ld	a, (x)
      0009B7 AA 20            [ 1] 2252 	or	a, #0x20
      0009B9 F7               [ 1] 2253 	ld	(x), a
      0009BA 20 07            [ 2] 2254 	jra	00103$
      0009BC                       2255 00102$:
                                   2256 ;	libstm8s/src/stm8s_tim1.c: 2232: TIM1->CCER1 &= (uint8_t)(~TIM1_CCER1_CC2P);
      0009BC AE 52 5C         [ 2] 2257 	ldw	x, #0x525c
      0009BF F6               [ 1] 2258 	ld	a, (x)
      0009C0 A4 DF            [ 1] 2259 	and	a, #0xdf
      0009C2 F7               [ 1] 2260 	ld	(x), a
      0009C3                       2261 00103$:
                                   2262 ;	libstm8s/src/stm8s_tim1.c: 2235: TIM1->CCER1 |=  TIM1_CCER1_CC2E;
      0009C3 AE 52 5C         [ 2] 2263 	ldw	x, #0x525c
      0009C6 F6               [ 1] 2264 	ld	a, (x)
      0009C7 AA 10            [ 1] 2265 	or	a, #0x10
      0009C9 F7               [ 1] 2266 	ld	(x), a
      0009CA 84               [ 1] 2267 	pop	a
      0009CB 81               [ 4] 2268 	ret
                                   2269 ;	libstm8s/src/stm8s_tim1.c: 2254: static void TI3_Config(uint8_t TIM1_ICPolarity,
                                   2270 ;	-----------------------------------------
                                   2271 ;	 function TI3_Config
                                   2272 ;	-----------------------------------------
      0009CC                       2273 _TI3_Config:
      0009CC 88               [ 1] 2274 	push	a
                                   2275 ;	libstm8s/src/stm8s_tim1.c: 2259: TIM1->CCER2 &=  (uint8_t)(~TIM1_CCER2_CC3E);
      0009CD 72 11 52 5D      [ 1] 2276 	bres	0x525d, #0
                                   2277 ;	libstm8s/src/stm8s_tim1.c: 2262: TIM1->CCMR3 = (uint8_t)((uint8_t)(TIM1->CCMR3 & (uint8_t)(~(uint8_t)( TIM1_CCMR_CCxS | TIM1_CCMR_ICxF))) 
      0009D1 AE 52 5A         [ 2] 2278 	ldw	x, #0x525a
      0009D4 F6               [ 1] 2279 	ld	a, (x)
      0009D5 A4 0C            [ 1] 2280 	and	a, #0x0c
      0009D7 6B 01            [ 1] 2281 	ld	(0x01, sp), a
                                   2282 ;	libstm8s/src/stm8s_tim1.c: 2263: | (uint8_t)(( (TIM1_ICSelection)) | ((uint8_t)( TIM1_ICFilter << 4))));
      0009D9 7B 06            [ 1] 2283 	ld	a, (0x06, sp)
      0009DB 4E               [ 1] 2284 	swap	a
      0009DC A4 F0            [ 1] 2285 	and	a, #0xf0
      0009DE 1A 05            [ 1] 2286 	or	a, (0x05, sp)
      0009E0 1A 01            [ 1] 2287 	or	a, (0x01, sp)
      0009E2 AE 52 5A         [ 2] 2288 	ldw	x, #0x525a
      0009E5 F7               [ 1] 2289 	ld	(x), a
                                   2290 ;	libstm8s/src/stm8s_tim1.c: 2266: if (TIM1_ICPolarity != TIM1_ICPOLARITY_RISING)
      0009E6 0D 04            [ 1] 2291 	tnz	(0x04, sp)
      0009E8 27 09            [ 1] 2292 	jreq	00102$
                                   2293 ;	libstm8s/src/stm8s_tim1.c: 2268: TIM1->CCER2 |= TIM1_CCER2_CC3P;
      0009EA AE 52 5D         [ 2] 2294 	ldw	x, #0x525d
      0009ED F6               [ 1] 2295 	ld	a, (x)
      0009EE AA 02            [ 1] 2296 	or	a, #0x02
      0009F0 F7               [ 1] 2297 	ld	(x), a
      0009F1 20 07            [ 2] 2298 	jra	00103$
      0009F3                       2299 00102$:
                                   2300 ;	libstm8s/src/stm8s_tim1.c: 2272: TIM1->CCER2 &= (uint8_t)(~TIM1_CCER2_CC3P);
      0009F3 AE 52 5D         [ 2] 2301 	ldw	x, #0x525d
      0009F6 F6               [ 1] 2302 	ld	a, (x)
      0009F7 A4 FD            [ 1] 2303 	and	a, #0xfd
      0009F9 F7               [ 1] 2304 	ld	(x), a
      0009FA                       2305 00103$:
                                   2306 ;	libstm8s/src/stm8s_tim1.c: 2275: TIM1->CCER2 |=  TIM1_CCER2_CC3E;
      0009FA 72 10 52 5D      [ 1] 2307 	bset	0x525d, #0
      0009FE 84               [ 1] 2308 	pop	a
      0009FF 81               [ 4] 2309 	ret
                                   2310 ;	libstm8s/src/stm8s_tim1.c: 2294: static void TI4_Config(uint8_t TIM1_ICPolarity,
                                   2311 ;	-----------------------------------------
                                   2312 ;	 function TI4_Config
                                   2313 ;	-----------------------------------------
      000A00                       2314 _TI4_Config:
      000A00 88               [ 1] 2315 	push	a
                                   2316 ;	libstm8s/src/stm8s_tim1.c: 2299: TIM1->CCER2 &=  (uint8_t)(~TIM1_CCER2_CC4E);
      000A01 AE 52 5D         [ 2] 2317 	ldw	x, #0x525d
      000A04 F6               [ 1] 2318 	ld	a, (x)
      000A05 A4 EF            [ 1] 2319 	and	a, #0xef
      000A07 F7               [ 1] 2320 	ld	(x), a
                                   2321 ;	libstm8s/src/stm8s_tim1.c: 2302: TIM1->CCMR4 = (uint8_t)((uint8_t)(TIM1->CCMR4 & (uint8_t)(~(uint8_t)( TIM1_CCMR_CCxS | TIM1_CCMR_ICxF )))
      000A08 AE 52 5B         [ 2] 2322 	ldw	x, #0x525b
      000A0B F6               [ 1] 2323 	ld	a, (x)
      000A0C A4 0C            [ 1] 2324 	and	a, #0x0c
      000A0E 6B 01            [ 1] 2325 	ld	(0x01, sp), a
                                   2326 ;	libstm8s/src/stm8s_tim1.c: 2303: | (uint8_t)(( (TIM1_ICSelection)) | ((uint8_t)( TIM1_ICFilter << 4))));
      000A10 7B 06            [ 1] 2327 	ld	a, (0x06, sp)
      000A12 4E               [ 1] 2328 	swap	a
      000A13 A4 F0            [ 1] 2329 	and	a, #0xf0
      000A15 1A 05            [ 1] 2330 	or	a, (0x05, sp)
      000A17 1A 01            [ 1] 2331 	or	a, (0x01, sp)
      000A19 AE 52 5B         [ 2] 2332 	ldw	x, #0x525b
      000A1C F7               [ 1] 2333 	ld	(x), a
                                   2334 ;	libstm8s/src/stm8s_tim1.c: 2306: if (TIM1_ICPolarity != TIM1_ICPOLARITY_RISING)
      000A1D 0D 04            [ 1] 2335 	tnz	(0x04, sp)
      000A1F 27 09            [ 1] 2336 	jreq	00102$
                                   2337 ;	libstm8s/src/stm8s_tim1.c: 2308: TIM1->CCER2 |= TIM1_CCER2_CC4P;
      000A21 AE 52 5D         [ 2] 2338 	ldw	x, #0x525d
      000A24 F6               [ 1] 2339 	ld	a, (x)
      000A25 AA 20            [ 1] 2340 	or	a, #0x20
      000A27 F7               [ 1] 2341 	ld	(x), a
      000A28 20 07            [ 2] 2342 	jra	00103$
      000A2A                       2343 00102$:
                                   2344 ;	libstm8s/src/stm8s_tim1.c: 2312: TIM1->CCER2 &= (uint8_t)(~TIM1_CCER2_CC4P);
      000A2A AE 52 5D         [ 2] 2345 	ldw	x, #0x525d
      000A2D F6               [ 1] 2346 	ld	a, (x)
      000A2E A4 DF            [ 1] 2347 	and	a, #0xdf
      000A30 F7               [ 1] 2348 	ld	(x), a
      000A31                       2349 00103$:
                                   2350 ;	libstm8s/src/stm8s_tim1.c: 2316: TIM1->CCER2 |=  TIM1_CCER2_CC4E;
      000A31 AE 52 5D         [ 2] 2351 	ldw	x, #0x525d
      000A34 F6               [ 1] 2352 	ld	a, (x)
      000A35 AA 10            [ 1] 2353 	or	a, #0x10
      000A37 F7               [ 1] 2354 	ld	(x), a
      000A38 84               [ 1] 2355 	pop	a
      000A39 81               [ 4] 2356 	ret
                                   2357 	.area CODE
                                   2358 	.area INITIALIZER
                                   2359 	.area CABS (ABS)
